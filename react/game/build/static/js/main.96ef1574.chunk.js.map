{"version":3,"sources":["../assets/cards sync /^/.//.*/.png$","../assets/cards/Assassin.png","../assets/cards/Baron.png","../assets/cards/Baroness.png","../assets/cards/Bishop.png","../assets/cards/Cardinal.png","../assets/cards/Constable.png","../assets/cards/Count.png","../assets/cards/Countess.png","../assets/cards/Dowager Queen.png","../assets/cards/Guard.png","../assets/cards/Handmaid.png","../assets/cards/Jester.png","../assets/cards/King.png","../assets/cards/Priest.png","../assets/cards/Prince.png","../assets/cards/Princess.png","../assets/cards/Sycophant.png","Cards.js","../assets/values.js","CardCarousel.js","PlayCard.js","Round.js","socket-context.js","Landing.js","Results.js","Game.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Cards","props","clickCard","setState","opacity","console","log","state","bind","require","this","cardname","Card","hoverable","onClick","style","className","Body","padding","Img","src","getCard","React","Component","Values","CardCarousel","name","playedCardlist","played_cards","addCard","item","key","width","marginLeft","PlayCard","selectedPlayers","selectionSatisfied","selectedCard","selectPlayer","selectCard","endPlay","getList","type","x","cardPlayed","indexOf","splice","concat","length","valuesToSend","i","current_cards","currentPlayer","cardRemaining","results","selectedPlayer","roundCallback","list","enableCurrent","choiceType","ListGroup","all_players","Item","variant","disabled","Row","justifyContent","Col","all_cards","Badge","float","card_count","paddingTop","margin","Button","size","block","Round","discard","discardMode","cardToPlay","playCardCallback","playCardData","winner","gameCallback","playStatus","player_points","drawCard","drawn","draw_pile","chosen","remaining","currentCard","drawnCard","Container","display","socket","W3CWebSocket","window","location","protocol","host","Landing","startGame","startNewGame","endGame","gameOn","onopen","send","JSON","stringify","onmessage","event","obj","parse","data","in","toStartGame","final_winner","Results","sendResults","points_display","points","entries","value","stars","Game","landingCallback","landingData","gameStatus","roundData","new_points","rounds_played","round_winner","resultsCallback","resultsData","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.96ef1574.chunk.js","sourcesContent":["var map = {\n\t\"./Assassin.png\": 39,\n\t\"./Baron.png\": 40,\n\t\"./Baroness.png\": 41,\n\t\"./Bishop.png\": 42,\n\t\"./Cardinal.png\": 43,\n\t\"./Constable.png\": 44,\n\t\"./Count.png\": 45,\n\t\"./Countess.png\": 46,\n\t\"./Dowager Queen.png\": 47,\n\t\"./Guard.png\": 48,\n\t\"./Handmaid.png\": 49,\n\t\"./Jester.png\": 50,\n\t\"./King.png\": 51,\n\t\"./Priest.png\": 52,\n\t\"./Prince.png\": 53,\n\t\"./Princess.png\": 54,\n\t\"./Sycophant.png\": 55\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 21;","module.exports = __webpack_public_path__ + \"static/media/Assassin.6c7b8198.png\";","module.exports = __webpack_public_path__ + \"static/media/Baron.ac315008.png\";","module.exports = __webpack_public_path__ + \"static/media/Baroness.1c5a87ee.png\";","module.exports = __webpack_public_path__ + \"static/media/Bishop.0b0e0959.png\";","module.exports = __webpack_public_path__ + \"static/media/Cardinal.c7b46de0.png\";","module.exports = __webpack_public_path__ + \"static/media/Constable.f6ac8dd7.png\";","module.exports = __webpack_public_path__ + \"static/media/Count.67f8d8d4.png\";","module.exports = __webpack_public_path__ + \"static/media/Countess.6e495d6c.png\";","module.exports = __webpack_public_path__ + \"static/media/Dowager Queen.51a0834e.png\";","module.exports = __webpack_public_path__ + \"static/media/Guard.13b4141c.png\";","module.exports = __webpack_public_path__ + \"static/media/Handmaid.4af99d42.png\";","module.exports = __webpack_public_path__ + \"static/media/Jester.845851da.png\";","module.exports = __webpack_public_path__ + \"static/media/King.52d72f4c.png\";","module.exports = __webpack_public_path__ + \"static/media/Priest.2ef7dd82.png\";","module.exports = __webpack_public_path__ + \"static/media/Prince.fece33d0.png\";","module.exports = __webpack_public_path__ + \"static/media/Princess.2f3b56ce.png\";","module.exports = __webpack_public_path__ + \"static/media/Sycophant.09602aa7.png\";","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Game.css';\n\nclass Cards extends React.Component {\n\t\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \topacity: 1\n\t\t};\n\t    this.clickCard = this.clickCard.bind(this);\n\t}\n\n\tgetCard() {\n\t\treturn require('../assets/cards/'+this.props.cardname+'.png');\n\t}\n\n\tclickCard = () => {\n\t\tthis.setState({\n\t\t\topacity: 0.9\n\t\t});\n\t\tconsole.log(\"inner click\")\n\t}\n\n\trender() {\n\t\treturn(\n\t\t  \t<Card hoverable=\"true\" onClick={this.clickCard} style={{opacity: this.state.opacity}} className='Card-design'>\n\t\t      <Card.Body style={{ padding: 0 }}>\n\t\t        <Card.Img src={this.getCard()}/>\n\t\t      </Card.Body>\n\t\t    </Card>\n\t\t);\n\t}\n}\n\nexport default Cards;\n\n","export const Values = {\n\t\"num_players\" : 3,\n\t\"all_players\" : [\"p1\", \"p2\", \"p3\"],\n\t\"all_cards\" : [\"Jester\", \"Assassin\", \"Guard\", \"Priest\", \"Princess\", \"Baron\"],\n\t\"card_count\" : {\n\t\t\"Jester\" : 1, \n\t\t\"Assassin\" : 2, \n\t\t\"Guard\" : 3, \n\t\t\"Priest\": 4, \n\t\t\"Princess\": 5, \n\t\t\"Baron\" : 6\n\t},\n\t\"player_points\" : {\n\t\t\"p1\" : 0,\n\t\t\"p2\" : 0,\n\t\t\"p3\" : 0\n\t},\n\t\"played_cards\" : [\"Guard\", \"Priest\", \"Princess\"],\n\t\"current_cards\" : {\n\t\t\"p1\" : \"Priest\", \n\t\t\"p2\" : \"Jester\", \n\t\t\"p3\" : \"Baron\"\n\t},\n\t\"draw_pile\" : [\"Assassin\", \"Guard\", \"Priest\", \"Baron\"]\n};\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {Values} from '../assets/values.js';\nimport './Game.css';\n\nclass CardCarousel extends React.Component {\n\tgetCard(name) {\n\t\treturn require('../assets/cards/'+name+'.png');\n\t}\t\n\trender() {\n\t\tlet playedCardlist = Values.played_cards;\n\t\tif(this.props.addCard!= \" \") {\n\t\t\tplayedCardlist = [...playedCardlist, this.props.addCard];\n\t\t}\n\t\treturn( // make cards unique using keys\n\t\t  \t<div className='Card-carousel'> \n\t\t\t  \t{playedCardlist.map((item) => \n\t\t\t  \t\t<div key={item}>\n\t\t\t  \t\t\t<Card style={{ width: '6rem', marginLeft: '2px' }}>\n\t\t\t\t\t      <Card.Body style={{ padding: 0 }}>\n\t\t\t\t\t        <Card.Img src={this.getCard(item)}/>\n\t\t\t\t\t      </Card.Body>\n\t\t\t\t\t    </Card>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t  \t</div>\n\t\t);\n\t}\n}\n\nexport default CardCarousel;\n\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport './Game.css';\nimport {Values} from '../assets/values.js';\nimport {Container, Row, Col} from 'react-bootstrap';\n\nclass PlayCard extends React.Component {\n\t\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tselectedPlayers: [],\n\t    \tselectionSatisfied: false,\n\t    \tselectedCard: \" \"\n\t    }\n\t    this.selectPlayer = this.selectPlayer.bind(this);\n\t    this.selectCard = this.selectCard.bind(this);\n\t\tthis.endPlay = this.endPlay.bind(this);\n\t\tthis.getList = this.getList.bind(this);\n\t}\n\n\tselectPlayer(type, item){ \n\t\tlet selectedPlayers = null;\n\t\tlet x = 0;\n\t\tif(type=='single') {\n\t\t\tselectedPlayers = [item];\n\t\t\tif(this.props.cardPlayed!=\"Guard\")\n\t\t\t\tthis.setState({selectionSatisfied: true, selectedPlayers: selectedPlayers});\n\t\t\telse\n\t\t\t\tthis.setState({selectedPlayers: selectedPlayers});\n\t\t}\n\t\telse {\n\t\t\tif((x=this.state.selectedPlayers.indexOf(item))>=0) {\n\t\t\t\tselectedPlayers = this.state.selectedPlayers;\n\t\t\t\tselectedPlayers.splice(x, 1);\t\n\t\t\t} else {\n\t\t\t\tselectedPlayers = this.state.selectedPlayers.concat(item);\n\t\t\t}\n\t\t\t\n\t\t\tif(type=='double') {\n\t\t\t\tif(selectedPlayers.length==2) {\n\t\t\t\t\t\tthis.setState({selectionSatisfied: true, selectedPlayers: selectedPlayers});\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({selectionSatisfied: false, selectedPlayers: selectedPlayers});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(selectedPlayers.length==1 || selectedPlayers.length==2) {\n\t\t\t\t\t\tthis.setState({selectionSatisfied: true, selectedPlayers: selectedPlayers});\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({selectionSatisfied: false, selectedPlayers: selectedPlayers});\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t\tconsole.log('selected player:'+selectedPlayers)\n\t}\n\tselectCard(item) {\n\t\tthis.setState({selectionSatisfied: true, selectedCard: item});\n\t\tconsole.log('selected card:'+item);\n\t}\n\n\tendPlay() {\n\t\tconst valuesToSend = {};\n\t\tthis.state.selectedPlayers.map((item, i) => {\n\t\t\tvaluesToSend[item] = Values.current_cards[item]});\n\t\tvaluesToSend[this.props.currentPlayer] = this.props.cardRemaining;\n\t\t\n\t\tif(this.props.cardPlayed==\"Guard\")\n\t\t\tvaluesToSend[\"Guessed\"] = this.state.selectedCard;\n\t\tconsole.log(valuesToSend);\n\t\t\n\t\t//getResult(valuesToSend);\n\t\tconst results = {} //0 : no change (ex.Priest)\n\t\tresults[this.state.selectedPlayer] = 1;//won\n\t\tresults[this.props.currentPlayer] = -1;//lost and eliminated\n\t\t//display the result\n\t\tthis.props.roundCallback(results);\n\t}\n\n\tgetList() {\n\t\t//Eliminated?? ICON! Immune?? ICON!\n\t\t//change color on select\n\t\tvar list = null;\n\t\tif([\"Assassin\", \"Constable\", \"Count\", \"Countess\", \"Handmaid\", \"Princess\"].indexOf(this.props.cardPlayed)>=0) { //no action\n\t\t\tlist = null;\n\t\t\tconsole.log('list is null');\n\t\t}\n\t\t\n\t\telse {\n\t\t\tvar enableCurrent = (this.props.cardPlayed==\"Prince\" || this.props.cardPlayed==\"Sycophant\");\n\t\t\tvar choiceType = \"\";\n\t\t\t\n\t\t\tif(this.props.cardPlayed==\"Baroness\") //one or two choices\n\t\t\t\tchoiceType = \"either\";\n\t\t\telse if(this.props.cardPlayed==\"Cardinal\") // two choices\n\t\t\t\tchoiceType = \"double\";\n\t\t\telse // single choice\n\t\t\t\tchoiceType = \"single\";\n\n\t  \t\tlist = (<ListGroup>\n  \t\t\t\t{Values.all_players.map((item, i) => {\n\t\t\t\t\treturn <ListGroup.Item className='List-item-design'\n\t\t\t\t\t\t\t\tvariant={this.state.selectedPlayers.indexOf(item)>=0?'dark':'light'}\n\t\t\t\t\t\t\t\tkey={item}\n\t\t\t\t\t\t\t\tdisabled={enableCurrent?false:(item==this.props.currentPlayer)}\n\t\t\t\t\t\t\t\tonClick={(e) => this.selectPlayer(choiceType, item, e)}>{item}\n\t\t\t\t\t\t\t</ListGroup.Item>})}\n\t\t\t\t</ListGroup>);  \n\t  \t} \n\n\t\treturn list;\n\t}\n\n\trender() {\n\t\tconst list = this.getList();\n\t\tif(list!=null) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Row style={{justifyContent: 'center'}}>\n\t\t\t\t\t\t<Col>{list}</Col>\n\t\t\t\t\t\t{this.props.cardPlayed==\"Guard\"?\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<ListGroup>\n\t\t\t\t\t  \t\t\t\t{Values.all_cards.map((item, i) => {\n\t\t\t\t\t\t\t\t\t\treturn <ListGroup.Item className='List-item-design'\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={this.state.selectedCard==item?'dark':'light'}\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={item} \n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={item==this.props.cardPlayed}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => this.selectCard(item, e)}>{item}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge variant=\"secondary\" style={{float: 'right'}}>{Values.card_count[item]}</Badge>\n\t\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>})}\n\t\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t\t</Col>:\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row style={{width: '50vw', paddingTop: '10px', margin: 'auto'}}> \n\t\t\t\t\t\t<Button size=\"lg\" block className='Confirm-button' \n\t\t\t\t\t\tdisabled={!this.state.selectionSatisfied}\n\t\t\t\t\t\tonClick={this.endPlay}>OK</Button>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn (<div>{this.endPlay()}</div>);\n\t\t}\n\t}\n}\n\nexport default PlayCard;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport './Game.css';\nimport Cards from './Cards.js';\nimport CardCarousel from './CardCarousel.js';\nimport PlayCard from './PlayCard.js';\nimport {Values} from '../assets/values.js';\nimport {Container, Row, Col} from 'react-bootstrap';\n\n\nclass Round extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \topacity: 1,\n\t\t    cardToPlay: \" \",\n\t\t    cardRemaining: \" \",\n\t\t    discardMode: false,\n\t\t    currentPlayer: \"p1\",\n\t\t    playStatus: \"p1\"+\" is discarding\",\n\t\t    results: Values.player_points,\n\t\t    winner: \"p1\"\n\t\t};\n\t    this.drawCard = this.drawCard.bind(this);\n\t    this.selectCard = this.selectCard.bind(this);\n\t    this.discard = this.discard.bind(this);\n\t    this.endPlay = this.endPlay.bind(this);\n\t    this.playCardCallback = this.playCardCallback.bind(this);\n\t}\n\n\tdrawCard() {\n\t\tconst drawn = Values.draw_pile[0];\n\t\t//drawCard();\n\t\tconsole.log(Values.draw_pile.splice(0, 0)); //check syntax\n\t\treturn drawn;\n\t}\n\n\tselectCard(chosen, remaining) {\n\t\tthis.setState({\n\t\t\tcardToPlay: chosen,\n\t\t\tcardRemaining: remaining,\n\t\t\topacity: 0.9 \n\t\t});\n    \tconsole.log('Clicked ' + this.state.cardToPlay);\n  \t}\n\n  \tdiscard = () => {\n  \t\tthis.setState({\n\t\t\tdiscardMode: true\n\t\t});\n  \t\tconsole.log('Discarding ' + this.state.cardToPlay);\n  \t}\n\n  \tendPlay = () => {\n  \t\tthis.setState({\n\t\t\tdiscardMode: false\n\t\t});\n  \t\tconsole.log('Ending Play');\n  \t}\n\n  \tplayCardCallback = (playCardData) => {\n  \t\tthis.setState({\n  \t\t\tresults: playCardData, //check if round is over based on backend logic\n  \t\t\twinner: \"p1\", //check who won; if no one yet, keep blank\n  \t\t});\n  \t\tif(this.state.winner!=\" \") {\n\t\t\tthis.props.gameCallback(this.state.winner);\n\t\t}\n\t\telse {\n\t\t\tthis.endPlay();\n\t\t}\n  \t}\n\n\trender() {\n\t\tconst currentCard = Values.current_cards[this.state.currentPlayer];\n\t\tconst drawnCard = this.drawCard();\n\t\tconsole.log('in round');\n\t\tif(this.state.discardMode) {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<CardCarousel addCard={this.state.cardToPlay}/>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<h4 className='Play-status'>{this.state.playStatus}</h4>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t\t<PlayCard currentPlayer = {this.state.currentPlayer} cardPlayed={this.state.cardToPlay} cardRemaining={this.state.cardRemaining} roundCallback={this.playCardCallback}/>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t} \n\t\telse {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<CardCarousel addCard={\" \"}/>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<h4 className='Play-status'>{this.state.playStatus}</h4>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<Col style={{display: \"inline-flex\"}} onClick={(e) => this.selectCard(currentCard, drawnCard, e)}>\n\t\t\t\t  \t\t\t<Cards cardname={currentCard}/>\n\t\t\t\t  \t\t</Col>\n\t\t\t\t  \t\t<Col style={{display: \"inline-flex\"}} onClick={(e) => this.selectCard(drawnCard, currentCard, e)}>\n\t\t\t\t  \t\t\t<Cards cardname={drawnCard}/>\n\t\t\t\t  \t\t</Col>\n\t\t\t\t  \t</Row> \n\t\t\t\t  \t<Row style={{width: '50vw'}}> \n\t\t\t\t  \t\t<Button size=\"lg\" block className='Confirm-button' disabled={this.state.cardToPlay==\" \"} onClick={this.discard}>Discard</Button>\n\t\t\t\t  \t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default Round;\n","import { w3cwebsocket as W3CWebSocket } from \"websocket\"\n\nconst socket = new W3CWebSocket(((window.location.protocol === \"https:\") ? \"wss://\" : \"ws://\") + window.location.host + \"/ws\")\n\n\n\nexport default socket;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport './Game.css';\n//import {Values} from '../assets/values.js';\nimport {Container, Row, Col} from 'react-bootstrap';\n\nimport socket from './socket-context'\n\n\nclass Landing extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tgameOn: true\n\t    };\n\t   \tthis.startGame = this.startGame.bind(this);\n\t   \tthis.startNewGame = this.startNewGame.bind(this);\n\t   \tthis.endGame = this.endGame.bind(this);\n\t   \tthis.all_players = []\n\t   \tsocket.onopen = () => {\n\t\t\tconsole.log('WebSocket Client Connected');\n\t\t\tsocket.send(JSON.stringify({'type':'players'}))\n\t\t};\n\n\n\n\t   \tsocket.onmessage = (event) => {\n\t   \t\tconsole.log(event)\n\t   \t\tvar obj = JSON.parse(event.data);\n\t   \t\tthis.all_players = obj.in\n\t   \t\tconsole.log(obj.in)\n\t   \t}\n\t}\n\n\tstartGame = () => {\n\t\tthis.props.gameCallback(1);\n\t\t//socket.send(JSON.stringify({'type':'startGame'}))startGame\n\t\t//ALso have to change the onmessage function to something else\n\t}\n\n\tstartNewGame = () => {\n\t\tthis.props.gameCallback(0);\n\t}\n\n\tendGame = () => {\n\t\tthis.setState({\n\t\t\tgameOn: false //remove this player from the game metadata; it could still go on\n\t\t});\n\t}\n\n\n\trender() {\n\t\tif(this.props.toStartGame) {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t\t  \t\t<h4 className='Play-status'>Waiting For Players...</h4>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t\t  \t\t<ListGroup>\n\t\t\t\t  \t\t\t{this.all_players.map((item, i) => {\n\t\t  \t\t\t\t\t\treturn <ListGroup.Item key={item} className='List-item-design'>{item}</ListGroup.Item>})}\n\t\t\t\t\t\t</ListGroup>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row style={{width: '50vw'}}> \n\t\t\t\t  \t\t<Button size=\"lg\" block className='Confirm-button' onClick={this.startGame}>Start Game</Button>\n\t\t\t\t  \t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t} \n\t\telse {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t<Row style={{margin: 'auto'}}>\n\t\t\t\t  \t<h4 className='Play-status'>{this.props.final_winner} won the game!</h4>\n\t\t\t  \t</Row>\n\t\t\t  \t<Row style={{margin: 'auto'}}> \n\t\t\t  \t\t<Col><Button size=\"lg\" style={{width: '30vw'}} block className='Confirm-button' onClick={this.endGame}>Leave Game</Button></Col>\n\t\t\t  \t\t<Col><Button size=\"lg\" style={{width: '30vw'}} block className='Confirm-button' onClick={this.startNewGame}>Start New Game</Button></Col>\n\t\t\t  \t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default Landing;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport FA from 'react-fontawesome';\nimport './Game.css';\nimport {Container, Row, Col} from 'react-bootstrap';\n\n\nclass Results extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.sendResults = this.sendResults.bind(this);\n\t}\n\n\tsendResults(final_winner) {\n\t\tconsole.log('Sent winner='+final_winner);\n\t\tthis.props.gameCallback(final_winner);\n\t}\n\n\trender() {\n\t\tconst points_display = this.props.points; //games won\n\t\tlet final_winner = \"p1\";\n\t\tObject.entries(points_display).map(([key,value]) => {\n\t\t\tif (value>=4) {\n\t\t\t\tfinal_winner = key;\n\t\t\t}\n\t\t\tlet stars = \"\";\n\t\t\tfor(let i=0;i<value;i++)\n\t\t\t\tstars+=\"*\";\n\t\t\tpoints_display[key] = stars; // Fontawesome hearts/envelopes\n\t\t})\n\t\treturn(\n\t\t\t<Container className=\"Game-header\">\n\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t  \t\t<h4 className='Play-status'>{this.props.winner}'s letter reached the Princess!</h4>\n\t\t\t  \t</Row>\n\t\t\t  \t<Row style={{margin: 'auto'}}> \n\t\t\t  \t\t<ListGroup>\n\t\t\t  \t\t\t{Object.entries(points_display).map(([key,value]) => {\n\t\t\t\t\t\t\treturn <ListGroup.Item key={key} className='List-item-design'>\n\t\t\t\t\t\t\t\t\t\t<Col style={{display: 'inline'}}>{key}</Col>\n\t\t\t\t\t\t\t\t\t\t<Col style={{display: 'inline'}}>{value}</Col>\n\t\t\t\t\t\t\t\t\t</ListGroup.Item>})}\n\t\t\t\t\t</ListGroup>\n\t\t\t  \t</Row>\n\t\t\t  \t<Row style={{width: '50vw'}}> \n\t\t\t  \t\t{final_winner!=\" \"? <Button size=\"lg\" block className='Confirm-button' onClick={(e) => this.sendResults(final_winner, e)}>OK</Button>\n\t\t\t  \t\t\t:<Button size=\"lg\" block className='Confirm-button' onClick={(e) => this.sendResults(final_winner, e)}>Start Next Round</Button>}\n\t\t\t  \t</Row>\n\t\t\t</Container> \n\t\t);\n\t}\n}\n\nexport default Results;\n","import React from 'react';\nimport './Game.css';\nimport Round from './Round.js';\nimport Landing from './Landing.js';\nimport Results from './Results.js';\nimport {Values} from '../assets/values.js';\n\n\n\n\n\nclass Game extends React.Component {\n\t\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tgameStatus: 0, /* 0-landing screen start game, 1- in round, 2- round results, 3-landing screen end game*/\n\t\t\ttoStartGame: true,\n\t\t\trounds_played: 0,\n\t\t\tpoints: Values.player_points,\n\t\t\tround_winner: \" \"\n\t\t};\n\t\tthis.landingCallback = this.landingCallback.bind(this);\n\t\tthis.roundCallback = this.roundCallback.bind(this);\n\t\tthis.resultsCallback = this.resultsCallback.bind(this);\n\t}\n\n\tlandingCallback = (landingData) => {\n\t\tthis.setState({\n\t\t\tgameStatus: landingData\n\t\t})\n\t}\n\n\troundCallback = (roundData) => {\n\t\tconst winner = roundData;\n\t\tlet new_points = this.state.points;\n\t\tnew_points[winner] = new_points[winner]+1;\n\t\tthis.setState({\n\t\t\trounds_played: this.state.rounds_played+1,\n\t\t\tpoints: new_points,\n\t\t\tgameStatus: 2,\n\t\t\tround_winner: winner\n\t\t});\n\t}\n\n\tresultsCallback = (resultsData) => {\n\t\tif(resultsData!=\" \") {\n\t\t\tthis.setState({\n\t\t\t\tgameStatus: 3,\n\t\t\t\tround_winner: resultsData\n\t\t\t});\n\t\t\tconsole.log('results='+resultsData);\n\t\t\tconsole.log('set state=3');\n\t\t}\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\tgameStatus: 1\n\t\t\t});\n\t\t\tconsole.log('set state=1');\n\t\t}\n\t}\n\n\trender() {\n\t\tif (this.state.gameStatus==0)\n\t\t\treturn (<Landing toStartGame={this.state.toStartGame} gameCallback = {this.landingCallback}/>);\n\t\telse if (this.state.gameStatus==1)\n\t\t    return (<Round gameCallback={this.roundCallback}/>);\n\t\telse if (this.state.gameStatus==2)\n\t\t\treturn(<Results points={this.state.points} winner={this.state.round_winner} gameCallback={this.resultsCallback}/>);\n\t\telse\n\t\t\treturn (<Landing toStartGame={false} final_winner={this.state.round_winner} gameCallback = {this.landingCallback}/>);\n\t}\n}\n\nexport default Game;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\nimport * as serviceWorker from './serviceWorker';\n\nimport socket from './socket-context'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Game />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}