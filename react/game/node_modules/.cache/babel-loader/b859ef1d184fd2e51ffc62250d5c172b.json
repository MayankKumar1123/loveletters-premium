{"ast":null,"code":"import _classCallCheck from\"/Users/tejal/yo/loveletters-premium/react/game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/tejal/yo/loveletters-premium/react/game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/tejal/yo/loveletters-premium/react/game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/tejal/yo/loveletters-premium/react/game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/tejal/yo/loveletters-premium/react/game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'bootstrap/dist/css/bootstrap.css';import Button from'react-bootstrap/Button';import'./Game.css';import Cards from'./Cards.js';import CardCarousel from'./CardCarousel.js';import PlayCard from'./PlayCard.js';import{Container,Row,Col}from'react-bootstrap';import socket from'./socket-context';var Round=/*#__PURE__*/function(_React$Component){_inherits(Round,_React$Component);var _super=_createSuper(Round);function Round(props){var _this;_classCallCheck(this,Round);_this=_super.call(this,props);_this.discard=function(){_this.setState({discardMode:true});console.log('Discarding '+_this.state.cardToPlay);};_this.endPlay=function(){_this.setState({discardMode:false});console.log('Ending Play');};_this.playCardCallback=function(playCardData){_this.setState({results:playCardData,//check if round is over based on backend logic\nwinner:\"p1\"//check who won; if no one yet, keep blank\n});if(_this.state.winner!==\" \"){_this.props.gameCallback(_this.state.winner);}else{_this.endPlay();}};_this.state={opacity:1,cardToPlay:\" \",cardRemaining:\" \",discardMode:false,currentPlayer:\" \",playStatus:\"p1 is discarding\",results:{//socket.player_points,\n\"p1\":0,\"p2\":0,\"p3\":0},winner:\"p1\",currentCards:{}};_this.selectCard=_this.selectCard.bind(_assertThisInitialized(_this));_this.discard=_this.discard.bind(_assertThisInitialized(_this));_this.endPlay=_this.endPlay.bind(_assertThisInitialized(_this));_this.playCardCallback=_this.playCardCallback.bind(_assertThisInitialized(_this));return _this;}_createClass(Round,[{key:\"componentWillMount\",value:function componentWillMount(){var _this2=this;socket.send(JSON.stringify({'type':'ready'}));console.log('sent ready');socket.onmessage=function(event){var obj=JSON.parse(event.data);console.log(obj);if(obj.type==='turn'){_this2.setState({currentPlayer:obj.player,currentCards:obj.cards});}};}},{key:\"selectCard\",value:function selectCard(chosen,remaining){this.setState({cardToPlay:chosen,cardRemaining:remaining,opacity:0.9});console.log('Clicked '+this.state.cardToPlay);}},{key:\"render\",value:function render(){var _this3=this;console.log('username = '+this.props.username);console.log('currentPlayer = '+this.state.currentPlayer);console.log(this.state.currentCards);var currentCard=this.state.currentCards[0];if(currentCard===undefined)currentCard=\"Assassin\";// before first render\nif(this.props.userID===this.state.currentPlayer){console.log(this.props.username+'is playing');var drawnCard=this.state.currentCards[1];if(drawnCard===undefined)drawnCard=\"Assassin\";// before first render\nif(this.state.discardMode){return/*#__PURE__*/React.createElement(Container,{className:\"Game-header\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(CardCarousel,{addCard:this.state.cardToPlay})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"Play-status\"},this.state.playStatus)),/*#__PURE__*/React.createElement(PlayCard,{currentPlayer:this.props.username,cardPlayed:this.state.cardToPlay,cardRemaining:this.state.cardRemaining,roundCallback:this.playCardCallback,all_players:this.props.all_players}));{/*what about UserID in playCard??*/}}else{return/*#__PURE__*/React.createElement(Container,{className:\"Game-header\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(CardCarousel,{addCard:\" \"})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"Play-status\"},this.state.playStatus)),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{style:{display:\"inline-flex\"},onClick:function onClick(e){return _this3.selectCard(currentCard,drawnCard,e);}},/*#__PURE__*/React.createElement(Cards,{cardname:currentCard})),/*#__PURE__*/React.createElement(Col,{style:{display:\"inline-flex\"},onClick:function onClick(e){return _this3.selectCard(drawnCard,currentCard,e);}},/*#__PURE__*/React.createElement(Cards,{cardname:drawnCard}))),/*#__PURE__*/React.createElement(Row,{style:{width:'50vw'}},/*#__PURE__*/React.createElement(Button,{size:\"lg\",block:true,className:\"Confirm-button\",disabled:this.state.cardToPlay===\" \",onClick:this.discard},\"Discard\")));}}else{return/*#__PURE__*/React.createElement(Container,{className:\"Game-header\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(CardCarousel,{addCard:\" \"})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"Play-status\"},this.state.playStatus)),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"h3\",{className:\"Play-status\"},\"It's not your turn\")),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{style:{display:\"inline-flex\"}},/*#__PURE__*/React.createElement(Cards,{cardname:currentCard}))));}}}]);return Round;}(React.Component);export default Round;","map":{"version":3,"sources":["/Users/tejal/yo/loveletters-premium/react/game/src/Round.js"],"names":["React","Button","Cards","CardCarousel","PlayCard","Container","Row","Col","socket","Round","props","discard","setState","discardMode","console","log","state","cardToPlay","endPlay","playCardCallback","playCardData","results","winner","gameCallback","opacity","cardRemaining","currentPlayer","playStatus","currentCards","selectCard","bind","send","JSON","stringify","onmessage","event","obj","parse","data","type","player","cards","chosen","remaining","username","currentCard","undefined","userID","drawnCard","all_players","display","e","width","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport './Game.css';\nimport Cards from './Cards.js';\nimport CardCarousel from './CardCarousel.js';\nimport PlayCard from './PlayCard.js';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport socket from './socket-context'\n\n\nclass Round extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \topacity: 1,\n\t\t    cardToPlay: \" \",\n\t\t    cardRemaining: \" \",\n\t\t    discardMode: false,\n\t\t    currentPlayer: \" \",\n\t\t    playStatus: \"p1 is discarding\",\n\t\t    results: {  //socket.player_points,\n\t\t\t\t\t\t\"p1\" : 0,\n\t\t\t\t\t\t\"p2\" : 0,\n\t\t\t\t\t\t\"p3\" : 0\n\t\t\t\t\t},\n\t\t    winner: \"p1\",\n\t\t    currentCards: {}\n\t\t};\n\t    this.selectCard = this.selectCard.bind(this);\n\t    this.discard = this.discard.bind(this);\n\t    this.endPlay = this.endPlay.bind(this);\n\t    this.playCardCallback = this.playCardCallback.bind(this);\n\t}\n\t\n\tcomponentWillMount() {\n\t\tsocket.send(JSON.stringify({'type':'ready'}));\n\t    console.log('sent ready')\n\n\t\tsocket.onmessage = (event) => {\n\t   \t\tvar obj = JSON.parse(event.data);\n\t\t\tconsole.log(obj)\n\t\t\t\n\t\t\tif(obj.type === 'turn') {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrentPlayer: obj.player,\n\t\t\t\t\tcurrentCards: obj.cards\n\t\t\t\t});\n\t\t\t}\n\t   \t}\n\t}\n\n\tselectCard(chosen, remaining) {\n\t\tthis.setState({\n\t\t\tcardToPlay: chosen,\n\t\t\tcardRemaining: remaining,\n\t\t\topacity: 0.9 \n\t\t});\n    \tconsole.log('Clicked ' + this.state.cardToPlay);\n  \t}\n\n  \tdiscard = () => {\n  \t\tthis.setState({\n\t\t\tdiscardMode: true\n\t\t});\n  \t\tconsole.log('Discarding ' + this.state.cardToPlay);\n  \t}\n\n  \tendPlay = () => {\n  \t\tthis.setState({\n\t\t\tdiscardMode: false\n\t\t});\n  \t\tconsole.log('Ending Play');\n  \t}\n\n  \tplayCardCallback = (playCardData) => {\n  \t\tthis.setState({\n  \t\t\tresults: playCardData, //check if round is over based on backend logic\n  \t\t\twinner: \"p1\", //check who won; if no one yet, keep blank\n  \t\t});\n  \t\tif(this.state.winner!==\" \") {\n\t\t\tthis.props.gameCallback(this.state.winner);\n\t\t}\n\t\telse {\n\t\t\tthis.endPlay();\n\t\t} \n  \t}\n\n\trender() {\n\t\tconsole.log('username = '+this.props.username);\n\t\tconsole.log('currentPlayer = '+this.state.currentPlayer);\n\t\tconsole.log(this.state.currentCards);\n\n\t\tvar currentCard = this.state.currentCards[0];\n\t\tif(currentCard===undefined)\n\t\t\tcurrentCard=\"Assassin\" // before first render\n\t\t\n\t\tif(this.props.userID === this.state.currentPlayer) {\n\t\t\tconsole.log(this.props.username+ 'is playing');\n\t\t\tvar drawnCard = this.state.currentCards[1];\n\t\t\tif(drawnCard===undefined)\n\t\t\t\tdrawnCard=\"Assassin\" // before first render\n\t\t\t\n\t\t\tif(this.state.discardMode) {\n\t\t\t\treturn(\n\t\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t\t  \t<Row>\n\t\t\t\t\t  \t\t<CardCarousel addCard={this.state.cardToPlay}/>\n\t\t\t\t\t  \t</Row>\n\t\t\t\t\t  \t<Row>\n\t\t\t\t\t  \t\t<h4 className='Play-status'>{this.state.playStatus}</h4>\n\t\t\t\t\t  \t</Row>\n\t\t\t\t\t  \t\t<PlayCard currentPlayer={this.props.username}\n\t\t\t\t\t  \t\tcardPlayed={this.state.cardToPlay} cardRemaining={this.state.cardRemaining} \n\t\t\t\t\t  \t\troundCallback={this.playCardCallback} all_players={this.props.all_players}/>\n\t\t\t\t\t</Container>\n\t\t\t\t); {/*what about UserID in playCard??*/}\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn(\n\t\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t\t  \t<Row>\n\t\t\t\t\t  \t\t<CardCarousel addCard={\" \"}/>\n\t\t\t\t\t  \t</Row>\n\t\t\t\t\t  \t<Row>\n\t\t\t\t\t  \t\t<h4 className='Play-status'>{this.state.playStatus}</h4>\n\t\t\t\t\t  \t</Row>\n\t\t\t\t\t  \t<Row>\n\t\t\t\t\t  \t\t<Col style={{display: \"inline-flex\"}} onClick={(e) => this.selectCard(currentCard, drawnCard, e)}>\n\t\t\t\t\t  \t\t\t<Cards cardname={currentCard}/>\n\t\t\t\t\t  \t\t</Col>\n\t\t\t\t\t  \t\t<Col style={{display: \"inline-flex\"}} onClick={(e) => this.selectCard(drawnCard, currentCard, e)}>\n\t\t\t\t\t  \t\t\t<Cards cardname={drawnCard}/>\n\t\t\t\t\t  \t\t</Col>\n\t\t\t\t\t  \t</Row> \n\t\t\t\t\t  \t<Row style={{width: '50vw'}}> \n\t\t\t\t\t  \t\t<Button size=\"lg\" block className='Confirm-button' disabled={this.state.cardToPlay===\" \"} onClick={this.discard}>Discard</Button>\n\t\t\t\t\t  \t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<CardCarousel addCard={\" \"}/>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<h4 className='Play-status'>{this.state.playStatus}</h4>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<h3 className='Play-status'>It's not your turn</h3>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<Col style={{display: \"inline-flex\"}}>\n\t\t\t\t  \t\t\t<Cards cardname={currentCard}/>\n\t\t\t\t  \t\t</Col>\n\t\t\t\t  \t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default Round;\n"]},"metadata":{},"sourceType":"module"}