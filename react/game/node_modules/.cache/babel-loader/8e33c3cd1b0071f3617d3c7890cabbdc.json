{"ast":null,"code":"import _classCallCheck from\"/home/mayank/BoardGames/loveletters-premium/react/game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mayank/BoardGames/loveletters-premium/react/game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/mayank/BoardGames/loveletters-premium/react/game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/mayank/BoardGames/loveletters-premium/react/game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/mayank/BoardGames/loveletters-premium/react/game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'bootstrap/dist/css/bootstrap.css';import Button from'react-bootstrap/Button';import'./Game.css';import Cards from'./Cards.js';import CardCarousel from'./CardCarousel.js';import PlayCard from'./PlayCard.js';import{Values}from'../assets/values.js';import{Container,Row,Col}from'react-bootstrap';var Round=/*#__PURE__*/function(_React$Component){_inherits(Round,_React$Component);var _super=_createSuper(Round);function Round(props){var _this;_classCallCheck(this,Round);_this=_super.call(this,props);_this.discard=function(){_this.setState({discardMode:true});console.log('Discarding '+_this.state.cardToPlay);};_this.endPlay=function(){_this.setState({discardMode:false});console.log('Ending Play');};_this.playCardCallback=function(playCardData){_this.setState({results:playCardData,//check if round is over based on backend logic\nwinner:\"p1\"//check who won; if no one yet, keep blank\n});if(_this.state.winner!=\" \"){_this.props.gameCallback(_this.state.winner);}else{_this.endPlay();}};_this.state={opacity:1,cardToPlay:\" \",cardRemaining:\" \",discardMode:false,currentPlayer:\"p1\",playStatus:\"p1\"+\" is discarding\",results:Values.player_points,winner:\"p1\"};_this.drawCard=_this.drawCard.bind(_assertThisInitialized(_this));_this.selectCard=_this.selectCard.bind(_assertThisInitialized(_this));_this.discard=_this.discard.bind(_assertThisInitialized(_this));_this.endPlay=_this.endPlay.bind(_assertThisInitialized(_this));_this.playCardCallback=_this.playCardCallback.bind(_assertThisInitialized(_this));return _this;}_createClass(Round,[{key:\"drawCard\",value:function drawCard(){var drawn=Values.draw_pile[0];//drawCard();\nconsole.log(Values.draw_pile.splice(0,0));//check syntax\nreturn drawn;}},{key:\"selectCard\",value:function selectCard(chosen,remaining){this.setState({cardToPlay:chosen,cardRemaining:remaining,opacity:0.9});console.log('Clicked '+this.state.cardToPlay);}},{key:\"render\",value:function render(){var _this2=this;var currentCard=Values.current_cards[this.state.currentPlayer];var drawnCard=this.drawCard();console.log('in round');if(this.state.discardMode){return/*#__PURE__*/React.createElement(Container,{className:\"Game-header\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(CardCarousel,{addCard:this.state.cardToPlay})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"Play-status\"},this.state.playStatus)),/*#__PURE__*/React.createElement(PlayCard,{currentPlayer:this.state.currentPlayer,cardPlayed:this.state.cardToPlay,cardRemaining:this.state.cardRemaining,roundCallback:this.playCardCallback}));}else{return/*#__PURE__*/React.createElement(Container,{className:\"Game-header\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(CardCarousel,{addCard:\" \"})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"Play-status\"},this.state.playStatus)),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{style:{display:\"inline-flex\"},onClick:function onClick(e){return _this2.selectCard(currentCard,drawnCard,e);}},/*#__PURE__*/React.createElement(Cards,{cardname:currentCard})),/*#__PURE__*/React.createElement(Col,{style:{display:\"inline-flex\"},onClick:function onClick(e){return _this2.selectCard(drawnCard,currentCard,e);}},/*#__PURE__*/React.createElement(Cards,{cardname:drawnCard}))),/*#__PURE__*/React.createElement(Row,{style:{width:'50vw'}},/*#__PURE__*/React.createElement(Button,{size:\"lg\",block:true,className:\"Confirm-button\",disabled:this.state.cardToPlay==\" \",onClick:this.discard},\"Discard\")));}}}]);return Round;}(React.Component);export default Round;","map":{"version":3,"sources":["/home/mayank/BoardGames/loveletters-premium/react/game/src/Round.js"],"names":["React","Button","Cards","CardCarousel","PlayCard","Values","Container","Row","Col","Round","props","discard","setState","discardMode","console","log","state","cardToPlay","endPlay","playCardCallback","playCardData","results","winner","gameCallback","opacity","cardRemaining","currentPlayer","playStatus","player_points","drawCard","bind","selectCard","drawn","draw_pile","splice","chosen","remaining","currentCard","current_cards","drawnCard","display","e","width","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport './Game.css';\nimport Cards from './Cards.js';\nimport CardCarousel from './CardCarousel.js';\nimport PlayCard from './PlayCard.js';\nimport {Values} from '../assets/values.js';\nimport {Container, Row, Col} from 'react-bootstrap';\n\n\nclass Round extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \topacity: 1,\n\t\t    cardToPlay: \" \",\n\t\t    cardRemaining: \" \",\n\t\t    discardMode: false,\n\t\t    currentPlayer: \"p1\",\n\t\t    playStatus: \"p1\"+\" is discarding\",\n\t\t    results: Values.player_points,\n\t\t    winner: \"p1\"\n\t\t};\n\t    this.drawCard = this.drawCard.bind(this);\n\t    this.selectCard = this.selectCard.bind(this);\n\t    this.discard = this.discard.bind(this);\n\t    this.endPlay = this.endPlay.bind(this);\n\t    this.playCardCallback = this.playCardCallback.bind(this);\n\t}\n\n\tdrawCard() {\n\t\tconst drawn = Values.draw_pile[0];\n\t\t//drawCard();\n\t\tconsole.log(Values.draw_pile.splice(0, 0)); //check syntax\n\t\treturn drawn;\n\t}\n\n\tselectCard(chosen, remaining) {\n\t\tthis.setState({\n\t\t\tcardToPlay: chosen,\n\t\t\tcardRemaining: remaining,\n\t\t\topacity: 0.9\n\t\t});\n    \tconsole.log('Clicked ' + this.state.cardToPlay);\n  \t}\n\n  \tdiscard = () => {\n  \t\tthis.setState({\n\t\t\tdiscardMode: true\n\t\t});\n  \t\tconsole.log('Discarding ' + this.state.cardToPlay);\n  \t}\n\n  \tendPlay = () => {\n  \t\tthis.setState({\n\t\t\tdiscardMode: false\n\t\t});\n  \t\tconsole.log('Ending Play');\n  \t}\n\n  \tplayCardCallback = (playCardData) => {\n  \t\tthis.setState({\n  \t\t\tresults: playCardData, //check if round is over based on backend logic\n  \t\t\twinner: \"p1\", //check who won; if no one yet, keep blank\n  \t\t});\n  \t\tif(this.state.winner!=\" \") {\n\t\t\tthis.props.gameCallback(this.state.winner);\n\t\t}\n\t\telse {\n\t\t\tthis.endPlay();\n\t\t}\n  \t}\n\n\trender() {\n\t\tconst currentCard = Values.current_cards[this.state.currentPlayer];\n\t\tconst drawnCard = this.drawCard();\n\t\tconsole.log('in round');\n\t\tif(this.state.discardMode) {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<CardCarousel addCard={this.state.cardToPlay}/>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<h4 className='Play-status'>{this.state.playStatus}</h4>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t\t<PlayCard currentPlayer = {this.state.currentPlayer} cardPlayed={this.state.cardToPlay} cardRemaining={this.state.cardRemaining} roundCallback={this.playCardCallback}/>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t} \n\t\telse {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<CardCarousel addCard={\" \"}/>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<h4 className='Play-status'>{this.state.playStatus}</h4>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<Col style={{display: \"inline-flex\"}} onClick={(e) => this.selectCard(currentCard, drawnCard, e)}>\n\t\t\t\t  \t\t\t<Cards cardname={currentCard}/>\n\t\t\t\t  \t\t</Col>\n\t\t\t\t  \t\t<Col style={{display: \"inline-flex\"}} onClick={(e) => this.selectCard(drawnCard, currentCard, e)}>\n\t\t\t\t  \t\t\t<Cards cardname={drawnCard}/>\n\t\t\t\t  \t\t</Col>\n\t\t\t\t  \t</Row> \n\t\t\t\t  \t<Row style={{width: '50vw'}}> \n\t\t\t\t  \t\t<Button size=\"lg\" block className='Confirm-button' disabled={this.state.cardToPlay==\" \"} onClick={this.discard}>Discard</Button>\n\t\t\t\t  \t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default Round;\n"]},"metadata":{},"sourceType":"module"}