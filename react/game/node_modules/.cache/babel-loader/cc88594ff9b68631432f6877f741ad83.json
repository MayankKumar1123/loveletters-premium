{"ast":null,"code":"import _classCallCheck from\"/home/mayank/BoardGames/loveletters-premium/react/game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mayank/BoardGames/loveletters-premium/react/game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/mayank/BoardGames/loveletters-premium/react/game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/mayank/BoardGames/loveletters-premium/react/game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/mayank/BoardGames/loveletters-premium/react/game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'bootstrap/dist/css/bootstrap.css';import Button from'react-bootstrap/Button';import ListGroup from'react-bootstrap/ListGroup';import Multiselect from'react-bootstrap-multiselect';import'./Game.css';import{Values}from'../assets/values.js';import{Container,Row,Col}from'react-bootstrap';var PlayCard=/*#__PURE__*/function(_React$Component){_inherits(PlayCard,_React$Component);var _super=_createSuper(PlayCard);function PlayCard(props){var _this;_classCallCheck(this,PlayCard);_this=_super.call(this,props);_this.state={selectedPlayer:\" \"};_this.selectPlayer=_this.selectPlayer.bind(_assertThisInitialized(_this));_this.endPlay=_this.endPlay.bind(_assertThisInitialized(_this));_this.getList=_this.getList.bind(_assertThisInitialized(_this));return _this;}_createClass(PlayCard,[{key:\"selectPlayer\",value:function selectPlayer(id){this.setState({selectedPlayer:id//turn that item disabled also\n});}},{key:\"endPlay\",value:function endPlay(){var valuesToSend={};valuesToSend[this.state.selectedPlayer]=Values.current_cards[this.state.selectedPlayer];valuesToSend[this.props.currentPlayer]=this.props.cardRemaining;console.log(valuesToSend);//getResult(valuesToSend);\nvar results={};//0 : no change (ex.Priest)\nresults[this.state.selectedPlayer]=1;//won\nresults[this.props.currentPlayer]=-1;//lost and eliminated\n//display the result\nthis.props.roundCallback(results);}},{key:\"getList\",value:function getList(){var _this2=this;//clean up list diaplay alignment also\n//Eliminated?? ICON!\n//Make sure you cant select yourself unless allowed\nvar list=null;if(this.props.cardPlayed in[\"Assassin\",\"Constable\",\"Count\",\"Countess\",\"Handmaid\",\"Princess\"]){list={};//no selection reqd\n}else if(this.props.cardPlayed==\"Baroness\"){list=/*#__PURE__*/React.createElement(ListGroup,null,Values.all_players.map(function(item,i){return/*#__PURE__*/React.createElement(ListGroup.Item,{action:true,className:\"List-item-design\",key:item,onClick:function onClick(e){return _this2.selectPlayer(item,e);}},item);}));//1 or 2 selection\n}else if(this.props.cardPlayed==\"Cardinal\"){list=/*#__PURE__*/React.createElement(ListGroup,null,Values.all_players.map(function(item,i){return/*#__PURE__*/React.createElement(ListGroup.Item,{action:true,className:\"List-item-design\",key:item,onClick:function onClick(e){return _this2.selectPlayer(item,e);}},item);}));//2 selection\n}else{list=/*#__PURE__*/React.createElement(ListGroup,null,Values.all_players.map(function(item,i){return/*#__PURE__*/React.createElement(ListGroup.Item,{action:true,className:\"List-item-design\",key:item,onClick:function onClick(e){return _this2.selectPlayer(item,e);}},item);}));//1 selection\n}return list;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{style:{margin:'auto'}},this.getList()),/*#__PURE__*/React.createElement(Row,{style:{width:'50vw'}},/*#__PURE__*/React.createElement(Button,{size:\"lg\",block:true,className:\"Confirm-button\",onClick:this.endPlay},\"OK\")));}}]);return PlayCard;}(React.Component);export default PlayCard;/*<ListGroup>\n\t\t{Values.all_players.map((item, i) => {\n\t\t\treturn <ListGroup.Item action className='List-item-design' key={item} onClick={(e) => this.selectPlayer(item, e)}>{item}</ListGroup.Item>})}\n</ListGroup>*/","map":{"version":3,"sources":["/home/mayank/BoardGames/loveletters-premium/react/game/src/PlayCard.js"],"names":["React","Button","ListGroup","Multiselect","Values","Container","Row","Col","PlayCard","props","state","selectedPlayer","selectPlayer","bind","endPlay","getList","id","setState","valuesToSend","current_cards","currentPlayer","cardRemaining","console","log","results","roundCallback","list","cardPlayed","all_players","map","item","i","e","margin","width","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Multiselect from 'react-bootstrap-multiselect';\nimport './Game.css';\nimport {Values} from '../assets/values.js';\nimport {Container, Row, Col} from 'react-bootstrap';\n\n\nclass PlayCard extends React.Component {\n\t\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tselectedPlayer: \" \"\n\t    }\n\t    this.selectPlayer = this.selectPlayer.bind(this);\n\t\tthis.endPlay = this.endPlay.bind(this);\n\t\tthis.getList = this.getList.bind(this);\n\t}\n\n\tselectPlayer(id){ \n\t\tthis.setState({\n\t\t\tselectedPlayer: id //turn that item disabled also\n\t\t});\n\t}\n\n\tendPlay() {\n\t\tconst valuesToSend = {};\n\t\tvaluesToSend[this.state.selectedPlayer] = Values.current_cards[this.state.selectedPlayer];\n\t\tvaluesToSend[this.props.currentPlayer] = this.props.cardRemaining;\n\t\tconsole.log(valuesToSend);\n\t\t//getResult(valuesToSend);\n\t\tconst results = {} //0 : no change (ex.Priest)\n\t\tresults[this.state.selectedPlayer] = 1;//won\n\t\tresults[this.props.currentPlayer] = -1;//lost and eliminated\n\t\t//display the result\n\t\tthis.props.roundCallback(results);\n\t}\n\n\tgetList() {\n\t\t//clean up list diaplay alignment also\n\t\t//Eliminated?? ICON!\n\t\t//Make sure you cant select yourself unless allowed\n\t\tvar list = null;\n\t\tif(this.props.cardPlayed in [\"Assassin\", \"Constable\", \"Count\", \"Countess\", \"Handmaid\", \"Princess\"]) {\n\t\t\tlist = {}; //no selection reqd\n\t\t}\n\t\telse if(this.props.cardPlayed==\"Baroness\") {\n\t\t\tlist = (<ListGroup>\n\t  \t\t\t{Values.all_players.map((item, i) => {\n\t\t\t\t\t\treturn <ListGroup.Item action className='List-item-design' key={item} onClick={(e) => this.selectPlayer(item, e)}>{item}</ListGroup.Item>})}\n\t\t\t</ListGroup>); //1 or 2 selection\n\t\t}\n\t\telse if(this.props.cardPlayed==\"Cardinal\") {\n\t\t\tlist = (<ListGroup>\n\t  \t\t\t{Values.all_players.map((item, i) => {\n\t\t\t\t\t\treturn <ListGroup.Item action className='List-item-design' key={item} onClick={(e) => this.selectPlayer(item, e)}>{item}</ListGroup.Item>})}\n\t\t\t</ListGroup>); //2 selection\n\t\t}\n\t\telse {\n\t\t\tlist = (<ListGroup>\n\t  \t\t\t{Values.all_players.map((item, i) => {\n\t\t\t\t\t\treturn <ListGroup.Item action className='List-item-design' key={item} onClick={(e) => this.selectPlayer(item, e)}>{item}</ListGroup.Item>})}\n\t\t\t</ListGroup>); //1 selection\n\t  \t}\n\t\treturn list;\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Row style={{margin: 'auto'}}>\n\t\t\t\t\t{this.getList()}\n\t\t\t\t</Row>\n\t\t\t\t<Row style={{width: '50vw'}}> \n\t\t\t\t\t<Button size=\"lg\" block className='Confirm-button' onClick={this.endPlay}>OK</Button>\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PlayCard;\n\n\n\n/*<ListGroup>\n\t\t{Values.all_players.map((item, i) => {\n\t\t\treturn <ListGroup.Item action className='List-item-design' key={item} onClick={(e) => this.selectPlayer(item, e)}>{item}</ListGroup.Item>})}\n</ListGroup>*/"]},"metadata":{},"sourceType":"module"}