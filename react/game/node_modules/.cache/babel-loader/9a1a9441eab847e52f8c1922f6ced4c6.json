{"ast":null,"code":"var _jsxFileName = \"/home/mayank/BoardGames/loveletters-premium/react/game/src/Round.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport './Game.css';\nimport Cards from './Cards.js';\nimport CardCarousel from './CardCarousel.js';\nimport PlayCard from './PlayCard.js';\nimport { Values } from '../assets/values.js';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nclass Round extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.discard = () => {\n      this.setState({\n        discardMode: true\n      });\n      console.log('Discarding ' + this.state.cardToPlay);\n    };\n\n    this.endPlay = () => {\n      this.setState({\n        discardMode: false\n      });\n      console.log('Ending Play');\n    };\n\n    this.playCardCallback = playCardData => {\n      this.setState({\n        results: playCardData,\n        //check if round is over based on backend logic\n        winner: \"p1\" //check who won; if no one yet, keep blank\n\n      });\n\n      if (this.state.winner != \" \") {\n        this.props.gameCallback(this.state.winner);\n      } else {\n        this.endPlay();\n      }\n    };\n\n    this.state = {\n      opacity: 1,\n      cardToPlay: \" \",\n      cardRemaining: \" \",\n      discardMode: false,\n      currentPlayer: \"p1\",\n      playStatus: \"p1\" + \" is discarding\",\n      results: Values.player_points,\n      winner: \"p1\"\n    };\n    this.drawCard = this.drawCard.bind(this);\n    this.selectCard = this.selectCard.bind(this);\n    this.discard = this.discard.bind(this);\n    this.endPlay = this.endPlay.bind(this);\n    this.playCardCallback = this.playCardCallback.bind(this);\n  }\n\n  drawCard() {\n    const drawn = Values.draw_pile[0]; //drawCard();\n\n    console.log(Values.draw_pile.splice(0, 0)); //check syntax\n\n    return drawn;\n  }\n\n  selectCard(chosen, remaining) {\n    this.setState({\n      cardToPlay: chosen,\n      cardRemaining: remaining,\n      opacity: 0.9\n    });\n    console.log('Clicked ' + this.state.cardToPlay);\n  }\n\n  render() {\n    const currentCard = Values.current_cards[this.state.currentPlayer];\n    const drawnCard = this.drawCard();\n\n    if (this.state.discardMode) {\n      return /*#__PURE__*/React.createElement(Container, {\n        className: \"Game-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(CardCarousel, {\n        addCard: this.state.cardToPlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"Play-status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, this.state.playStatus)), /*#__PURE__*/React.createElement(PlayCard, {\n        currentPlayer: this.state.currentPlayer,\n        cardPlayed: this.state.cardToPlay,\n        cardRemaining: this.state.cardRemaining,\n        roundCallback: this.playCardCallback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(Container, {\n        className: \"Game-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(CardCarousel, {\n        addCard: \" \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"Play-status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, this.state.playStatus)), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        style: {\n          display: \"inline-flex\"\n        },\n        onClick: e => this.selectCard(currentCard, drawnCard, e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Cards, {\n        cardname: currentCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 10\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        style: {\n          display: \"inline-flex\"\n        },\n        onClick: e => this.selectCard(drawnCard, currentCard, e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Cards, {\n        cardname: drawnCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 10\n        }\n      }))), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          width: '50vw'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"lg\",\n        block: true,\n        className: \"Confirm-button\",\n        disabled: this.state.cardToPlay == \" \",\n        onClick: this.discard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, \"Discard\")));\n    }\n  }\n\n}\n\nexport default Round;","map":{"version":3,"sources":["/home/mayank/BoardGames/loveletters-premium/react/game/src/Round.js"],"names":["React","Button","Cards","CardCarousel","PlayCard","Values","Container","Row","Col","Round","Component","constructor","props","discard","setState","discardMode","console","log","state","cardToPlay","endPlay","playCardCallback","playCardData","results","winner","gameCallback","opacity","cardRemaining","currentPlayer","playStatus","player_points","drawCard","bind","selectCard","drawn","draw_pile","splice","chosen","remaining","render","currentCard","current_cards","drawnCard","display","e","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kCAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAAQC,MAAR,QAAqB,qBAArB;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,GAAxB,QAAkC,iBAAlC;;AAGA,MAAMC,KAAN,SAAoBT,KAAK,CAACU,SAA1B,CAAoC;AAEnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAmCjBC,OAnCiB,GAmCP,MAAM;AACf,WAAKC,QAAL,CAAc;AACfC,QAAAA,WAAW,EAAE;AADE,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgB,KAAKC,KAAL,CAAWC,UAAvC;AACA,KAxCgB;;AAAA,SA0CjBC,OA1CiB,GA0CP,MAAM;AACf,WAAKN,QAAL,CAAc;AACfC,QAAAA,WAAW,EAAE;AADE,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,KA/CgB;;AAAA,SAiDjBI,gBAjDiB,GAiDGC,YAAD,IAAkB;AACpC,WAAKR,QAAL,CAAc;AACbS,QAAAA,OAAO,EAAED,YADI;AACU;AACvBE,QAAAA,MAAM,EAAE,IAFK,CAEC;;AAFD,OAAd;;AAIA,UAAG,KAAKN,KAAL,CAAWM,MAAX,IAAmB,GAAtB,EAA2B;AAC5B,aAAKZ,KAAL,CAAWa,YAAX,CAAwB,KAAKP,KAAL,CAAWM,MAAnC;AACA,OAFC,MAGG;AACJ,aAAKJ,OAAL;AACA;AACC,KA5DgB;;AAEf,SAAKF,KAAL,GAAa;AACZQ,MAAAA,OAAO,EAAE,CADG;AAEZP,MAAAA,UAAU,EAAE,GAFA;AAGZQ,MAAAA,aAAa,EAAE,GAHH;AAIZZ,MAAAA,WAAW,EAAE,KAJD;AAKZa,MAAAA,aAAa,EAAE,IALH;AAMZC,MAAAA,UAAU,EAAE,OAAK,gBANL;AAOZN,MAAAA,OAAO,EAAElB,MAAM,CAACyB,aAPJ;AAQZN,MAAAA,MAAM,EAAE;AARI,KAAb;AAUA,SAAKO,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKnB,OAAL,GAAe,KAAKA,OAAL,CAAamB,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKZ,OAAL,GAAe,KAAKA,OAAL,CAAaY,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKX,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBW,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAEDD,EAAAA,QAAQ,GAAG;AACV,UAAMG,KAAK,GAAG7B,MAAM,CAAC8B,SAAP,CAAiB,CAAjB,CAAd,CADU,CAEV;;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAM,CAAC8B,SAAP,CAAiBC,MAAjB,CAAwB,CAAxB,EAA2B,CAA3B,CAAZ,EAHU,CAGkC;;AAC5C,WAAOF,KAAP;AACA;;AAEDD,EAAAA,UAAU,CAACI,MAAD,EAASC,SAAT,EAAoB;AAC7B,SAAKxB,QAAL,CAAc;AACbK,MAAAA,UAAU,EAAEkB,MADC;AAEbV,MAAAA,aAAa,EAAEW,SAFF;AAGbZ,MAAAA,OAAO,EAAE;AAHI,KAAd;AAKGV,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAa,KAAKC,KAAL,CAAWC,UAApC;AACD;;AA6BHoB,EAAAA,MAAM,GAAG;AACR,UAAMC,WAAW,GAAGnC,MAAM,CAACoC,aAAP,CAAqB,KAAKvB,KAAL,CAAWU,aAAhC,CAApB;AACA,UAAMc,SAAS,GAAG,KAAKX,QAAL,EAAlB;;AAEA,QAAG,KAAKb,KAAL,CAAWH,WAAd,EAA2B;AAC1B,0BACC,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,KAAKG,KAAL,CAAWC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,eAIG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKD,KAAL,CAAWW,UAAxC,CADD,CAJH,eAOI,oBAAC,QAAD;AAAU,QAAA,aAAa,EAAI,KAAKX,KAAL,CAAWU,aAAtC;AAAqD,QAAA,UAAU,EAAE,KAAKV,KAAL,CAAWC,UAA5E;AAAwF,QAAA,aAAa,EAAE,KAAKD,KAAL,CAAWS,aAAlH;AAAiI,QAAA,aAAa,EAAE,KAAKN,gBAArJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADD;AAWA,KAZD,MAaK;AACJ,0BACC,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,eAIG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKH,KAAL,CAAWW,UAAxC,CADD,CAJH,eAOG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAACc,UAAAA,OAAO,EAAE;AAAV,SAAZ;AAAsC,QAAA,OAAO,EAAGC,CAAD,IAAO,KAAKX,UAAL,CAAgBO,WAAhB,EAA6BE,SAA7B,EAAwCE,CAAxC,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAEJ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD,eAIC,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAACG,UAAAA,OAAO,EAAE;AAAV,SAAZ;AAAsC,QAAA,OAAO,EAAGC,CAAD,IAAO,KAAKX,UAAL,CAAgBS,SAAhB,EAA2BF,WAA3B,EAAwCI,CAAxC,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAEF,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAJD,CAPH,eAeG,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAACG,UAAAA,KAAK,EAAE;AAAR,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,KAAK,MAAvB;AAAwB,QAAA,SAAS,EAAC,gBAAlC;AAAmD,QAAA,QAAQ,EAAE,KAAK3B,KAAL,CAAWC,UAAX,IAAuB,GAApF;AAAyF,QAAA,OAAO,EAAE,KAAKN,OAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,CAfH,CADD;AAqBA;AACD;;AAxGkC;;AA2GpC,eAAeJ,KAAf","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport './Game.css';\nimport Cards from './Cards.js';\nimport CardCarousel from './CardCarousel.js';\nimport PlayCard from './PlayCard.js';\nimport {Values} from '../assets/values.js';\nimport {Container, Row, Col} from 'react-bootstrap';\n\n\nclass Round extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \topacity: 1,\n\t\t    cardToPlay: \" \",\n\t\t    cardRemaining: \" \",\n\t\t    discardMode: false,\n\t\t    currentPlayer: \"p1\",\n\t\t    playStatus: \"p1\"+\" is discarding\",\n\t\t    results: Values.player_points,\n\t\t    winner: \"p1\"\n\t\t};\n\t    this.drawCard = this.drawCard.bind(this);\n\t    this.selectCard = this.selectCard.bind(this);\n\t    this.discard = this.discard.bind(this);\n\t    this.endPlay = this.endPlay.bind(this);\n\t    this.playCardCallback = this.playCardCallback.bind(this);\n\t}\n\n\tdrawCard() {\n\t\tconst drawn = Values.draw_pile[0];\n\t\t//drawCard();\n\t\tconsole.log(Values.draw_pile.splice(0, 0)); //check syntax\n\t\treturn drawn;\n\t}\n\n\tselectCard(chosen, remaining) {\n\t\tthis.setState({\n\t\t\tcardToPlay: chosen,\n\t\t\tcardRemaining: remaining,\n\t\t\topacity: 0.9\n\t\t});\n    \tconsole.log('Clicked ' + this.state.cardToPlay);\n  \t}\n\n  \tdiscard = () => {\n  \t\tthis.setState({\n\t\t\tdiscardMode: true\n\t\t});\n  \t\tconsole.log('Discarding ' + this.state.cardToPlay);\n  \t}\n\n  \tendPlay = () => {\n  \t\tthis.setState({\n\t\t\tdiscardMode: false\n\t\t});\n  \t\tconsole.log('Ending Play');\n  \t}\n\n  \tplayCardCallback = (playCardData) => {\n  \t\tthis.setState({\n  \t\t\tresults: playCardData, //check if round is over based on backend logic\n  \t\t\twinner: \"p1\", //check who won; if no one yet, keep blank\n  \t\t});\n  \t\tif(this.state.winner!=\" \") {\n\t\t\tthis.props.gameCallback(this.state.winner);\n\t\t}\n\t\telse {\n\t\t\tthis.endPlay();\n\t\t}\n  \t}\n\n\trender() {\n\t\tconst currentCard = Values.current_cards[this.state.currentPlayer];\n\t\tconst drawnCard = this.drawCard();\n\t\t\n\t\tif(this.state.discardMode) {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<CardCarousel addCard={this.state.cardToPlay}/>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<h4 className='Play-status'>{this.state.playStatus}</h4>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t\t<PlayCard currentPlayer = {this.state.currentPlayer} cardPlayed={this.state.cardToPlay} cardRemaining={this.state.cardRemaining} roundCallback={this.playCardCallback}/>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t} \n\t\telse {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<CardCarousel addCard={\" \"}/>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<h4 className='Play-status'>{this.state.playStatus}</h4>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<Col style={{display: \"inline-flex\"}} onClick={(e) => this.selectCard(currentCard, drawnCard, e)}>\n\t\t\t\t  \t\t\t<Cards cardname={currentCard}/>\n\t\t\t\t  \t\t</Col>\n\t\t\t\t  \t\t<Col style={{display: \"inline-flex\"}} onClick={(e) => this.selectCard(drawnCard, currentCard, e)}>\n\t\t\t\t  \t\t\t<Cards cardname={drawnCard}/>\n\t\t\t\t  \t\t</Col>\n\t\t\t\t  \t</Row> \n\t\t\t\t  \t<Row style={{width: '50vw'}}> \n\t\t\t\t  \t\t<Button size=\"lg\" block className='Confirm-button' disabled={this.state.cardToPlay==\" \"} onClick={this.discard}>Discard</Button>\n\t\t\t\t  \t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default Round;\n"]},"metadata":{},"sourceType":"module"}