{"ast":null,"code":"var _jsxFileName = \"/home/mayank/BoardGames/loveletters-premium/react/game/src/Results.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport FA from 'react-fontawesome';\nimport './Game.css';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sendResults = this.sendResults.bind(this);\n  }\n\n  sendResults(final_winner) {\n    console.log('Sent winner=' + final_winner);\n    this.props.gameCallback(final_winner);\n  }\n\n  render() {\n    const points_display = this.props.points; //games won\n\n    let final_winner = \"p1\";\n    Object.entries(points_display).map(([key, value]) => {\n      if (value >= 4) {\n        final_winner = key;\n      }\n\n      let stars = \"\";\n\n      for (let i = 0; i < value; i++) stars += \"*\";\n\n      points_display[key] = stars; // Fontawesome hearts/envelopes\n    });\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"Game-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"Play-status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 8\n      }\n    }, this.props.winner, \"'s letter reached the Princess!\")), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 8\n      }\n    }, Object.entries(points_display).map(([key, value]) => {\n      return /*#__PURE__*/React.createElement(ListGroup.Item, {\n        className: \"List-item-design\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        style: {\n          display: 'inline'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, key), /*#__PURE__*/React.createElement(Col, {\n        style: {\n          display: 'inline'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, value));\n    }))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: '50vw'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, final_winner != \" \" ? /*#__PURE__*/React.createElement(Button, {\n      size: \"lg\",\n      block: true,\n      className: \"Confirm-button\",\n      onClick: e => this.sendResults(final_winner, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 28\n      }\n    }, \"OK\") : /*#__PURE__*/React.createElement(Button, {\n      size: \"lg\",\n      block: true,\n      className: \"Confirm-button\",\n      onClick: e => this.sendResults(final_winner, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }\n    }, \"Start Next Round\")));\n  }\n\n}\n\nexport default Results;","map":{"version":3,"sources":["/home/mayank/BoardGames/loveletters-premium/react/game/src/Results.js"],"names":["React","Button","ListGroup","FA","Container","Row","Col","Results","Component","constructor","props","sendResults","bind","final_winner","console","log","gameCallback","render","points_display","points","Object","entries","map","key","value","stars","i","margin","winner","display","width","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport FA from 'react-fontawesome';\nimport './Game.css';\nimport {Container, Row, Col} from 'react-bootstrap';\n\n\nclass Results extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.sendResults = this.sendResults.bind(this);\n\t}\n\n\tsendResults(final_winner) {\n\t\tconsole.log('Sent winner='+final_winner);\n\t\tthis.props.gameCallback(final_winner);\n\t}\n\n\trender() {\n\t\tconst points_display = this.props.points; //games won\n\t\tlet final_winner = \"p1\";\n\t\tObject.entries(points_display).map(([key,value]) => {\n\t\t\tif (value>=4) {\n\t\t\t\tfinal_winner = key;\n\t\t\t}\n\t\t\tlet stars = \"\";\n\t\t\tfor(let i=0;i<value;i++)\n\t\t\t\tstars+=\"*\";\n\t\t\tpoints_display[key] = stars; // Fontawesome hearts/envelopes\n\t\t})\n\t\treturn(\n\t\t\t<Container className=\"Game-header\">\n\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t  \t\t<h4 className='Play-status'>{this.props.winner}'s letter reached the Princess!</h4>\n\t\t\t  \t</Row>\n\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t  \t\t<ListGroup>\n\t\t\t  \t\t\t{Object.entries(points_display).map(([key,value]) => {\n\t\t\t\t\t\t\treturn <ListGroup.Item className='List-item-design'>\n\t\t\t\t\t\t\t\t\t\t<Col style={{display: 'inline'}}>{key}</Col>\n\t\t\t\t\t\t\t\t\t\t<Col style={{display: 'inline'}}>{value}</Col>\n\t\t\t\t\t\t\t\t\t</ListGroup.Item>})}\n\t\t\t\t\t</ListGroup>\n\t\t\t  \t</Row>\n\t\t\t  \t<Row style={{width: '50vw'}}> \n\t\t\t  \t\t{final_winner!=\" \"? <Button size=\"lg\" block className='Confirm-button' onClick={(e) => this.sendResults(final_winner, e)}>OK</Button>\n\t\t\t  \t\t\t:<Button size=\"lg\" block className='Confirm-button' onClick={(e) => this.sendResults(final_winner, e)}>Start Next Round</Button>}\n\t\t\t  \t</Row>\n\t\t\t</Container> \n\t\t);\n\t}\n}\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}