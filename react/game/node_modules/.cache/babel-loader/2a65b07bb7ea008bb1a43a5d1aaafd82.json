{"ast":null,"code":"var _jsxFileName = \"/home/mayank/BoardGames/loveletters-premium/react/game/src/PlayCard.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Multiselect from 'react-bootstrap-multiselect';\nimport './Game.css';\nimport { Values } from '../assets/values.js';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nclass PlayCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedPlayer: \" \"\n    };\n    this.selectPlayer = this.selectPlayer.bind(this);\n    this.endPlay = this.endPlay.bind(this);\n    this.getList = this.getList.bind(this);\n  }\n\n  selectPlayer(id) {\n    this.setState({\n      selectedPlayer: id //turn that item disabled also\n\n    });\n  }\n\n  endPlay() {\n    const valuesToSend = {};\n    valuesToSend[this.state.selectedPlayer] = Values.current_cards[this.state.selectedPlayer];\n    valuesToSend[this.props.currentPlayer] = this.props.cardRemaining;\n    console.log(valuesToSend); //getResult(valuesToSend);\n\n    const results = {}; //0 : no change (ex.Priest)\n\n    results[this.state.selectedPlayer] = 1; //won\n\n    results[this.props.currentPlayer] = -1; //lost and eliminated\n    //display the result\n\n    this.props.roundCallback(results);\n  }\n\n  getList() {\n    //clean up list diaplay alignment also\n    //Eliminated?? ICON!\n    //Make sure you cant select yourself unless allowed\n    var list = null;\n\n    if (this.props.cardPlayed in [\"Assassin\", \"Constable\", \"Count\", \"Countess\", \"Handmaid\", \"Princess\"]) {\n      list = {}; //no selection reqd\n    } else if (this.props.cardPlayed == \"Baroness\") {\n      list = /*#__PURE__*/React.createElement(ListGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 12\n        }\n      }, Values.all_players.map((item, i) => {\n        return /*#__PURE__*/React.createElement(ListGroup.Item, {\n          action: true,\n          className: \"List-item-design\",\n          key: item,\n          onClick: e => this.selectPlayer(item, e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 14\n          }\n        }, item);\n      })); //1 or 2 selection\n    } else if (this.props.cardPlayed == \"Cardinal\") {\n      list = /*#__PURE__*/React.createElement(ListGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 12\n        }\n      }, Values.all_players.map((item, i) => {\n        return /*#__PURE__*/React.createElement(ListGroup.Item, {\n          action: true,\n          className: \"List-item-design\",\n          key: item,\n          onClick: e => this.selectPlayer(item, e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 14\n          }\n        }, item);\n      })); //2 selection\n    } else {\n      list = /*#__PURE__*/React.createElement(ListGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 12\n        }\n      }, Values.all_players.map((item, i) => {\n        return /*#__PURE__*/React.createElement(ListGroup.Item, {\n          action: true,\n          className: \"List-item-design\",\n          key: item,\n          onClick: e => this.selectPlayer(item, e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 14\n          }\n        }, item);\n      })); //1 selection\n    }\n\n    return list;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }\n    }, this.getList()), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: '50vw'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"lg\",\n      block: true,\n      className: \"Confirm-button\",\n      onClick: this.endPlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 6\n      }\n    }, \"OK\")));\n  }\n\n}\n\nexport default PlayCard;\n/*<ListGroup>\n\t\t{Values.all_players.map((item, i) => {\n\t\t\treturn <ListGroup.Item action className='List-item-design' key={item} onClick={(e) => this.selectPlayer(item, e)}>{item}</ListGroup.Item>})}\n</ListGroup>*/","map":{"version":3,"sources":["/home/mayank/BoardGames/loveletters-premium/react/game/src/PlayCard.js"],"names":["React","Button","ListGroup","Multiselect","Values","Container","Row","Col","PlayCard","Component","constructor","props","state","selectedPlayer","selectPlayer","bind","endPlay","getList","id","setState","valuesToSend","current_cards","currentPlayer","cardRemaining","console","log","results","roundCallback","list","cardPlayed","all_players","map","item","i","e","render","margin","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Multiselect from 'react-bootstrap-multiselect';\nimport './Game.css';\nimport {Values} from '../assets/values.js';\nimport {Container, Row, Col} from 'react-bootstrap';\n\n\nclass PlayCard extends React.Component {\n\t\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tselectedPlayer: \" \"\n\t    }\n\t    this.selectPlayer = this.selectPlayer.bind(this);\n\t\tthis.endPlay = this.endPlay.bind(this);\n\t\tthis.getList = this.getList.bind(this);\n\t}\n\n\tselectPlayer(id){ \n\t\tthis.setState({\n\t\t\tselectedPlayer: id //turn that item disabled also\n\t\t});\n\t}\n\n\tendPlay() {\n\t\tconst valuesToSend = {};\n\t\tvaluesToSend[this.state.selectedPlayer] = Values.current_cards[this.state.selectedPlayer];\n\t\tvaluesToSend[this.props.currentPlayer] = this.props.cardRemaining;\n\t\tconsole.log(valuesToSend);\n\t\t//getResult(valuesToSend);\n\t\tconst results = {} //0 : no change (ex.Priest)\n\t\tresults[this.state.selectedPlayer] = 1;//won\n\t\tresults[this.props.currentPlayer] = -1;//lost and eliminated\n\t\t//display the result\n\t\tthis.props.roundCallback(results);\n\t}\n\n\tgetList() {\n\t\t//clean up list diaplay alignment also\n\t\t//Eliminated?? ICON!\n\t\t//Make sure you cant select yourself unless allowed\n\t\tvar list = null;\n\t\tif(this.props.cardPlayed in [\"Assassin\", \"Constable\", \"Count\", \"Countess\", \"Handmaid\", \"Princess\"]) {\n\t\t\tlist = {}; //no selection reqd\n\t\t}\n\t\telse if(this.props.cardPlayed==\"Baroness\") {\n\t\t\tlist = (<ListGroup>\n\t  \t\t\t{Values.all_players.map((item, i) => {\n\t\t\t\t\t\treturn <ListGroup.Item action className='List-item-design' key={item} onClick={(e) => this.selectPlayer(item, e)}>{item}</ListGroup.Item>})}\n\t\t\t</ListGroup>); //1 or 2 selection\n\t\t}\n\t\telse if(this.props.cardPlayed==\"Cardinal\") {\n\t\t\tlist = (<ListGroup>\n\t  \t\t\t{Values.all_players.map((item, i) => {\n\t\t\t\t\t\treturn <ListGroup.Item action className='List-item-design' key={item} onClick={(e) => this.selectPlayer(item, e)}>{item}</ListGroup.Item>})}\n\t\t\t</ListGroup>); //2 selection\n\t\t}\n\t\telse {\n\t\t\tlist = (<ListGroup>\n\t  \t\t\t{Values.all_players.map((item, i) => {\n\t\t\t\t\t\treturn <ListGroup.Item action className='List-item-design' key={item} onClick={(e) => this.selectPlayer(item, e)}>{item}</ListGroup.Item>})}\n\t\t\t</ListGroup>); //1 selection\n\t  \t}\n\t\treturn list;\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Row style={{margin: 'auto'}}>\n\t\t\t\t\t{this.getList()}\n\t\t\t\t</Row>\n\t\t\t\t<Row style={{width: '50vw'}}> \n\t\t\t\t\t<Button size=\"lg\" block className='Confirm-button' onClick={this.endPlay}>OK</Button>\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PlayCard;\n\n\n\n/*<ListGroup>\n\t\t{Values.all_players.map((item, i) => {\n\t\t\treturn <ListGroup.Item action className='List-item-design' key={item} onClick={(e) => this.selectPlayer(item, e)}>{item}</ListGroup.Item>})}\n</ListGroup>*/"]},"metadata":{},"sourceType":"module"}