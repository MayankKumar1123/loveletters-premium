{"version":3,"sources":["../assets/cards sync /^/.//.*/.png$","../assets/cards/Assassin.png","../assets/cards/Baron.png","../assets/cards/Baroness.png","../assets/cards/Bishop.png","../assets/cards/Cardinal.png","../assets/cards/Constable.png","../assets/cards/Count.png","../assets/cards/Countess.png","../assets/cards/Dowager Queen.png","../assets/cards/Guard.png","../assets/cards/Handmaid.png","../assets/cards/Jester.png","../assets/cards/King.png","../assets/cards/Priest.png","../assets/cards/Prince.png","../assets/cards/Princess.png","../assets/cards/Sycophant.png","Cards.js","CardCarousel.js","PlayCard.js","socket-context.js","Round.js","Landing.js","Results.js","Game.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Cards","props","clickCard","setState","opacity","state","selected","bind","require","this","cardname","Card","onClick","className","Body","style","padding","Button","variant","Img","src","getCard","React","Component","CardCarousel","name","playedCardlist","addCard","item","key","width","marginLeft","PlayCard","selectedPlayers","selectionSatisfied","selectedCard","selectPlayer","selectCard","endPlay","getList","type","x","cardPlayed","indexOf","splice","concat","length","console","log","current_cards","valuesToSend","i","currentPlayer","cardRemaining","results","selectedPlayer","roundCallback","list","enableCurrent","choiceType","ListGroup","all_players","Item","disabled","Row","justifyContent","Col","entries","value","Badge","float","paddingTop","margin","size","block","socket","W3CWebSocket","window","location","protocol","host","Round","discard","discardMode","cardToPlay","playCardCallback","playCardData","winner","gameCallback","playStatus","drawCard","onmessage","event","obj","JSON","parse","data","send","stringify","chosen","remaining","currentCard","drawnCard","Container","display","Landing","startGame","toStart","startNewGame","endGame","gameOn","showStartButton","onopen","plyrs","uid","toStartGame","final_winner","Results","sendResults","points_display","points","stars","Game","landingCallback","landingData","gameStatus","roundData","new_points","rounds_played","round_winner","resultsCallback","resultsData","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.234a7b0e.chunk.js","sourcesContent":["var map = {\n\t\"./Assassin.png\": 39,\n\t\"./Baron.png\": 40,\n\t\"./Baroness.png\": 41,\n\t\"./Bishop.png\": 42,\n\t\"./Cardinal.png\": 43,\n\t\"./Constable.png\": 44,\n\t\"./Count.png\": 45,\n\t\"./Countess.png\": 46,\n\t\"./Dowager Queen.png\": 47,\n\t\"./Guard.png\": 48,\n\t\"./Handmaid.png\": 49,\n\t\"./Jester.png\": 50,\n\t\"./King.png\": 51,\n\t\"./Priest.png\": 52,\n\t\"./Prince.png\": 53,\n\t\"./Princess.png\": 54,\n\t\"./Sycophant.png\": 55\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 21;","module.exports = __webpack_public_path__ + \"static/media/Assassin.6c7b8198.png\";","module.exports = __webpack_public_path__ + \"static/media/Baron.ac315008.png\";","module.exports = __webpack_public_path__ + \"static/media/Baroness.1c5a87ee.png\";","module.exports = __webpack_public_path__ + \"static/media/Bishop.0b0e0959.png\";","module.exports = __webpack_public_path__ + \"static/media/Cardinal.c7b46de0.png\";","module.exports = __webpack_public_path__ + \"static/media/Constable.f6ac8dd7.png\";","module.exports = __webpack_public_path__ + \"static/media/Count.67f8d8d4.png\";","module.exports = __webpack_public_path__ + \"static/media/Countess.6e495d6c.png\";","module.exports = __webpack_public_path__ + \"static/media/Dowager Queen.51a0834e.png\";","module.exports = __webpack_public_path__ + \"static/media/Guard.13b4141c.png\";","module.exports = __webpack_public_path__ + \"static/media/Handmaid.4af99d42.png\";","module.exports = __webpack_public_path__ + \"static/media/Jester.845851da.png\";","module.exports = __webpack_public_path__ + \"static/media/King.52d72f4c.png\";","module.exports = __webpack_public_path__ + \"static/media/Priest.2ef7dd82.png\";","module.exports = __webpack_public_path__ + \"static/media/Prince.fece33d0.png\";","module.exports = __webpack_public_path__ + \"static/media/Princess.2f3b56ce.png\";","module.exports = __webpack_public_path__ + \"static/media/Sycophant.09602aa7.png\";","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Game.css';\n\nclass Cards extends React.Component {\n\t\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tselected: 1\n\t\t};\n\t    this.clickCard = this.clickCard.bind(this);\n\t}\n\n\tgetCard() {\n\t\treturn require('../assets/cards/'+this.props.cardname+'.png');\n\t}\n\n\tclickCard = () => {\n\t\tthis.setState({\n\t\t\topacity: 0.9\n\t\t});\n\t}\n\n\trender() {\n\t\treturn(\n\t  \t\t<Card onClick={this.clickCard} className='Card-design'>\n\t\t\t    <Card.Body style={{ padding: 0 }}>\n\t\t\t    \t<Button className='card-button' variant=\"info\">\n\t\t\t        \t<Card.Img src={this.getCard()}/>\n\t\t\t        </Button>\n\t\t\t    </Card.Body>\n\t    \t</Card>\n\t\t    \n\t\t);\n\t}\n}\n\nexport default Cards;\n\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Game.css';\n\nclass CardCarousel extends React.Component {\n\tgetCard(name) {\n\t\treturn require('../assets/cards/'+name+'.png');\n\t}\t\n\trender() {\n\t\tlet playedCardlist = [\"Guard\", \"Priest\", \"Princess\"];//socket.played_cards;\n\t\tif(this.props.addCard!= \" \") {\n\t\t\tplayedCardlist = [...playedCardlist, this.props.addCard];\n\t\t}\n\t\treturn(\n\t\t  \t<div className='Card-carousel'> \n\t\t\t  \t{playedCardlist.map((item) => \n\t\t\t  \t\t<div key={item}>\n\t\t\t  \t\t\t<Card style={{ width: '6rem', marginLeft: '2px' }}>\n\t\t\t\t\t      <Card.Body style={{ padding: 0 }}>\n\t\t\t\t\t        <Card.Img src={this.getCard(item)}/>\n\t\t\t\t\t      </Card.Body>\n\t\t\t\t\t    </Card>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t  \t</div>\n\t\t);\n\t}\n}\n\nexport default CardCarousel;\n\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport './Game.css';\nimport {Container, Row, Col} from 'react-bootstrap';\n\nclass PlayCard extends React.Component {\n\t\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tselectedPlayers: [],\n\t    \tselectionSatisfied: false,\n\t    \tselectedCard: \" \"\n\t    }\n\t    this.selectPlayer = this.selectPlayer.bind(this);\n\t    this.selectCard = this.selectCard.bind(this);\n\t\tthis.endPlay = this.endPlay.bind(this);\n\t\tthis.getList = this.getList.bind(this);\n\t}\n\n\tselectPlayer(type, item){ \n\t\tlet selectedPlayers = null;\n\t\tlet x = 0;\n\t\tif(type=='single') {\n\t\t\tselectedPlayers = [item];\n\t\t\tif(this.props.cardPlayed!=\"Guard\")\n\t\t\t\tthis.setState({selectionSatisfied: true, selectedPlayers: selectedPlayers});\n\t\t\telse\n\t\t\t\tthis.setState({selectedPlayers: selectedPlayers});\n\t\t}\n\t\telse {\n\t\t\tif((x=this.state.selectedPlayers.indexOf(item))>=0) {\n\t\t\t\tselectedPlayers = this.state.selectedPlayers;\n\t\t\t\tselectedPlayers.splice(x, 1);\t\n\t\t\t} else {\n\t\t\t\tselectedPlayers = this.state.selectedPlayers.concat(item);\n\t\t\t}\n\t\t\t\n\t\t\tif(type=='double') {\n\t\t\t\tif(selectedPlayers.length==2) {\n\t\t\t\t\t\tthis.setState({selectionSatisfied: true, selectedPlayers: selectedPlayers});\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({selectionSatisfied: false, selectedPlayers: selectedPlayers});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(selectedPlayers.length==1 || selectedPlayers.length==2) {\n\t\t\t\t\t\tthis.setState({selectionSatisfied: true, selectedPlayers: selectedPlayers});\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({selectionSatisfied: false, selectedPlayers: selectedPlayers});\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t\tconsole.log('selected player:'+selectedPlayers)\n\t}\n\tselectCard(item) {\n\t\tthis.setState({selectionSatisfied: true, selectedCard: item});\n\t\tconsole.log('selected card:'+item);\n\t}\n\n\tendPlay() {\n\t\tconst current_cards = {\n\t\t\t\t\t\t\t\t\"p1\" : \"Guard\", \n\t\t\t\t\t\t\t\t\"p2\" : \"Jester\", \n\t\t\t\t\t\t\t\t\"p3\" : \"Baron\"\n\t\t\t\t\t\t\t};\n\t\tconst valuesToSend = {};\n\t\tthis.state.selectedPlayers.map((item, i) => {\n\t\t\tvaluesToSend[item] = current_cards[item]});//socket.current_cards[item];\n\t\tvaluesToSend[this.props.currentPlayer] = this.props.cardRemaining;\n\t\t\n\t\tif(this.props.cardPlayed==\"Guard\")\n\t\t\tvaluesToSend[\"Guessed\"] = this.state.selectedCard;\n\t\tconsole.log(valuesToSend);\n\t\t\n\t\t//getResult(valuesToSend);\n\t\tconst results = {} //0 : no change (ex.Priest)\n\t\tresults[this.state.selectedPlayer] = 1;//won\n\t\tresults[this.props.currentPlayer] = -1;//lost and eliminated\n\t\t//display the result\n\t\tthis.props.roundCallback(results);\n\t}\n\n\tgetList() {\n\t\t//Eliminated?? ICON! Immune?? ICON!\n\t\tvar list = null;\n\t\tif([\"Assassin\", \"Constable\", \"Count\", \"Countess\", \"Handmaid\", \"Princess\"].indexOf(this.props.cardPlayed)>=0) { //no action\n\t\t\tlist = null;\n\t\t\tconsole.log('list is null');\n\t\t}\n\t\t\n\t\telse {\n\t\t\tvar enableCurrent = (this.props.cardPlayed==\"Prince\" || this.props.cardPlayed==\"Sycophant\");\n\t\t\tvar choiceType = \"\";\n\t\t\t\n\t\t\tif(this.props.cardPlayed==\"Baroness\") //one or two choices\n\t\t\t\tchoiceType = \"either\";\n\t\t\telse if(this.props.cardPlayed==\"Cardinal\") // two choices\n\t\t\t\tchoiceType = \"double\";\n\t\t\telse // single choice\n\t\t\t\tchoiceType = \"single\";\n\n\t  \t\tlist = (<ListGroup>\n  \t\t\t\t{this.props.all_players.map((item, i) => {\n\t\t\t\t\treturn <ListGroup.Item className='List-item-design'\n\t\t\t\t\t\t\t\tvariant={this.state.selectedPlayers.indexOf(item)>=0?'dark':'light'}\n\t\t\t\t\t\t\t\tkey={item}\n\t\t\t\t\t\t\t\tdisabled={enableCurrent?false:(item==this.props.currentPlayer)}\n\t\t\t\t\t\t\t\tonClick={(e) => this.selectPlayer(choiceType, item, e)}>{item}\n\t\t\t\t\t\t\t</ListGroup.Item>})}\n\t\t\t\t</ListGroup>);  \n\t  \t} \n\n\t\treturn list;\n\t}\n\n\trender() {\n\t\tconst list = this.getList();\n\t\tconst card_count = {\n\t\t\t\t\t\t\t\"Assassin\" : 1, \n\t\t\t\t\t\t\t\"Baron\" : 2,\n\t\t\t\t\t\t\t\"Baroness\" : 2,\n\t\t\t\t\t\t\t\"Bishop\" : 1,\n\t\t\t\t\t\t\t\"Cardinal\" : 2,\n\t\t\t\t\t\t\t\"Constable\" : 1,\n\t\t\t\t\t\t\t\"Count\" : 2,\n\t\t\t\t\t\t\t\"Countess\" : 1,\n\t\t\t\t\t\t\t\"Dowager Queen\" : 1,\n\t\t\t\t\t\t\t\"Guard\" : 8, \n\t\t\t\t\t\t\t\"Handmaid\" : 2,\n\t\t\t\t\t\t\t\"Jester\" : 1, \n\t\t\t\t\t\t\t\"King\" : 1,\n\t\t\t\t\t\t\t\"Priest\" : 2, \n\t\t\t\t\t\t\t\"Prince\" : 2,\n\t\t\t\t\t\t\t\"Princess\" : 1,\n\t\t\t\t\t\t\t\"Sycophant\" : 2\n\t\t\t\t\t\t};\n\n\t\tif(list!=null) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Row style={{justifyContent: 'center'}}>\n\t\t\t\t\t\t<Col>{list}</Col>\n\t\t\t\t\t\t{this.props.cardPlayed==\"Guard\"?\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<ListGroup>\n\t\t\t\t\t  \t\t\t\t{Object.entries(card_count).map(([item, value]) => {\n\t\t\t\t\t\t\t\t\t\treturn <ListGroup.Item className='List-item-design'\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={this.state.selectedCard==item?'dark':'light'}\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={item} \n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={item==this.props.cardPlayed}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => this.selectCard(item, e)}>{item}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge variant=\"secondary\" style={{float: 'right'}}>{value}</Badge>\n\t\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>})}\n\t\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t\t</Col>:\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row style={{width: '50vw', paddingTop: '10px', margin: 'auto'}}> \n\t\t\t\t\t\t<Button size=\"lg\" block className='Confirm-button' \n\t\t\t\t\t\tdisabled={!this.state.selectionSatisfied}\n\t\t\t\t\t\tonClick={this.endPlay}>OK</Button>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn (<div>{this.endPlay()}</div>);\n\t\t}\n\t}\n}\n\nexport default PlayCard;\n","import { w3cwebsocket as W3CWebSocket } from \"websocket\"\n\nconst socket = new W3CWebSocket(((window.location.protocol === \"https:\") ? \"wss://\" : \"ws://\") + window.location.host + \"/ws\")\n\n\n\nexport default socket;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport './Game.css';\nimport Cards from './Cards.js';\nimport CardCarousel from './CardCarousel.js';\nimport PlayCard from './PlayCard.js';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport socket from './socket-context'\n\n\nclass Round extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \topacity: 1,\n\t\t    cardToPlay: \" \",\n\t\t    cardRemaining: \" \",\n\t\t    discardMode: false,\n\t\t    currentPlayer: \"p1\",\n\t\t    playStatus: \"p1\"+\" is discarding\",\n\t\t    results: {  //socket.player_points,\n\t\t\t\t\t\t\"p1\" : 0,\n\t\t\t\t\t\t\"p2\" : 0,\n\t\t\t\t\t\t\"p3\" : 0\n\t\t\t\t\t},\n\t\t    winner: \"p1\"\n\t\t};\n\t    this.drawCard = this.drawCard.bind(this);\n\t    this.selectCard = this.selectCard.bind(this);\n\t    this.discard = this.discard.bind(this);\n\t    this.endPlay = this.endPlay.bind(this);\n\t    this.playCardCallback = this.playCardCallback.bind(this);\n\t}\n\t\n\tcomponentWillMount() {\n\t   \tsocket.onmessage = (event) => {\n\t   \t\tvar obj = JSON.parse(event.data);\n\t   \t\t//Have to deal with data depending on what obj.type is\n\t\t\tconsole.log(obj)\n\t   \t}\n\t\t\n\t\tsocket.send(JSON.stringify({'type':'ready'}))\n\t\t//Tell server you are ready to get information now \n\t}\n\n\tdrawCard() {\n\t\tconst drawn = \"Assassin\"; //socket.cardDrawn\n\t\treturn drawn;\n\t}\n\n\tselectCard(chosen, remaining) {\n\t\tthis.setState({\n\t\t\tcardToPlay: chosen,\n\t\t\tcardRemaining: remaining,\n\t\t\topacity: 0.9 \n\t\t});\n    \tconsole.log('Clicked ' + this.state.cardToPlay);\n  \t}\n\n  \tdiscard = () => {\n  \t\tthis.setState({\n\t\t\tdiscardMode: true\n\t\t});\n  \t\tconsole.log('Discarding ' + this.state.cardToPlay);\n  \t}\n\n  \tendPlay = () => {\n  \t\tthis.setState({\n\t\t\tdiscardMode: false\n\t\t});\n  \t\tconsole.log('Ending Play');\n  \t}\n\n  \tplayCardCallback = (playCardData) => {\n  \t\tthis.setState({\n  \t\t\tresults: playCardData, //check if round is over based on backend logic\n  \t\t\twinner: \"p1\", //check who won; if no one yet, keep blank\n  \t\t});\n  \t\tif(this.state.winner!=\" \") {\n\t\t\tthis.props.gameCallback(this.state.winner);\n\t\t}\n\t\telse {\n\t\t\tthis.endPlay();\n\t\t}\n  \t}\n\n\trender() {\n\t\tconst current_cards = {\n\t\t\t\t\t\t\t\t\"p1\" : \"Guard\", \n\t\t\t\t\t\t\t\t\"p2\" : \"Jester\", \n\t\t\t\t\t\t\t\t\"p3\" : \"Baron\"\n\t\t\t\t\t\t\t}\n\t\tconst currentCard = current_cards[this.state.currentPlayer];//socket.current_cards[this.state.currentPlayer];\n\t\tconst drawnCard = this.drawCard();\n\t\tconsole.log('in round');\n\t\tif(this.state.discardMode) {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<CardCarousel addCard={this.state.cardToPlay}/>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<h4 className='Play-status'>{this.state.playStatus}</h4>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t\t<PlayCard currentPlayer={this.state.currentPlayer} cardPlayed={this.state.cardToPlay} \n\t\t\t\t  \t\tcardRemaining={this.state.cardRemaining} roundCallback={this.playCardCallback}\n\t\t\t\t  \t\tall_players={this.props.all_players}/>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t} \n\t\telse {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<CardCarousel addCard={\" \"}/>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<h4 className='Play-status'>{this.state.playStatus}</h4>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<Col style={{display: \"inline-flex\"}} onClick={(e) => this.selectCard(currentCard, drawnCard, e)}>\n\t\t\t\t  \t\t\t<Cards cardname={currentCard}/>\n\t\t\t\t  \t\t</Col>\n\t\t\t\t  \t\t<Col style={{display: \"inline-flex\"}} onClick={(e) => this.selectCard(drawnCard, currentCard, e)}>\n\t\t\t\t  \t\t\t<Cards cardname={drawnCard}/>\n\t\t\t\t  \t\t</Col>\n\t\t\t\t  \t</Row> \n\t\t\t\t  \t<Row style={{width: '50vw'}}> \n\t\t\t\t  \t\t<Button size=\"lg\" block className='Confirm-button' disabled={this.state.cardToPlay==\" \"} onClick={this.discard}>Discard</Button>\n\t\t\t\t  \t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default Round;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport './Game.css';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport socket from './socket-context';\n\n\nclass Landing extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tgameOn: true,\n\t    \tall_players: [\"p1\", \"p2\", \"p3\"],\n\t    \tshowStartButton: false,\n\t    \ttoStart: false\n\t    };\n\t   \tthis.startGame = this.startGame.bind(this);\n\t   \tthis.startNewGame = this.startNewGame.bind(this);\n\t   \tthis.endGame = this.endGame.bind(this);\n\t}\n\t\n\tcomponentWillMount() {\n\t   \tsocket.onopen = () => {\n\t\t\tconsole.log('WebSocket Client Connected');\n\t\t\tsocket.send(JSON.stringify({'type':'players'}))\n\t\t};\n\n\n\t   \tsocket.onmessage = (event) => {\n\t   \t\tvar obj = JSON.parse(event.data);\n\t\t\tconsole.log(obj)\n\t\t\t\n\t\t\tif(obj.type == 'playersS'){\n\t\t\t\tthis.setState({all_players: obj.plyrs});\n\t\t\t\tif(obj.uid == obj.host)\n\t\t\t\t\tthis.setState({showStartButton: true});\n\t\t\t}\n\t\t\telse if(obj.type == 'startGame')\n\t\t\t\tthis.setState({toStart: true});\n\t   \t}\n\t}\n\n\tstartGame = () => {\n\t\tsocket.send(JSON.stringify({'type':'startGame'}))\n\t\tconsole.log(\"sent Start\")\n\t\tif(this.state.toStart) {\n\t\t\tthis.setState({toStart: false});\n\t\t\tconsole.log(\"received Start\")\n\t\t\tthis.props.gameCallback(1, this.state.all_players);\n\t\t}\n\t\t\n\t}\n\n\tstartNewGame = () => {\n\t\tsocket.send(JSON.stringify({'type':'startGame'}))\n\t\tconsole.log(\"sent Start\")\n\t\tif(this.state.toStart) {\n\t\t\tthis.setState({toStart: false});\n\t\t\tconsole.log(\"received Start\")\n\t\t\tthis.props.gameCallback(0, this.state.all_players);\n\t\t}\n\t}\n\n\tendGame = () => {\n\t\tthis.setState({\n\t\t\tgameOn: false //remove this player from the game metadata; it could still go on\n\t\t});\n\t}\n\n\n\trender() {\n\t\tif(this.props.toStartGame) {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t\t  \t\t<h4 className='Play-status'>Waiting For Players...</h4>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t\t  \t\t<ListGroup>\n\t\t\t  \t\t\t\t{this.state.all_players.map((item, i) => {\n\t\t\t\t\t\t\t\treturn <ListGroup.Item className='List-item-design' key={item}>\n\t\t\t\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>})}\n\t\t\t\t\t\t</ListGroup>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row style={{width: '50vw'}}> \n\t\t\t\t  \t\t<Button size=\"lg\" block className='Confirm-button' disabled={!this.state.showStartButton} onClick={this.startGame}>Start Game</Button>\n\t\t\t\t  \t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t} \n\t\telse {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t<Row style={{margin: 'auto'}}>\n\t\t\t\t  \t<h4 className='Play-status'>{this.props.final_winner} won the game!</h4>\n\t\t\t  \t</Row>\n\t\t\t  \t<Row style={{margin: 'auto'}}> \n\t\t\t  \t\t<Col><Button size=\"lg\" style={{width: '30vw'}} block className='Confirm-button' onClick={this.endGame}>Leave Game</Button></Col>\n\t\t\t  \t\t<Col><Button size=\"lg\" style={{width: '30vw'}} block className='Confirm-button' onClick={this.startNewGame}>Start New Game</Button></Col>\n\t\t\t  \t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default Landing;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport FA from 'react-fontawesome';\nimport './Game.css';\nimport {Container, Row, Col} from 'react-bootstrap';\n\n\nclass Results extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.sendResults = this.sendResults.bind(this);\n\t}\n\n\tsendResults(final_winner) {\n\t\tconsole.log('Sent winner='+final_winner);\n\t\tthis.props.gameCallback(final_winner);\n\t}\n\n\trender() {\n\t\tconst points_display = this.props.points; //games won\n\t\tlet final_winner = \"p1\";\n\t\tObject.entries(points_display).map(([key,value]) => {\n\t\t\tif (value>=4) {\n\t\t\t\tfinal_winner = key;\n\t\t\t}\n\t\t\tlet stars = \"\";\n\t\t\tfor(let i=0;i<value;i++)\n\t\t\t\tstars+=\"*\";\n\t\t\tpoints_display[key] = stars; // Fontawesome hearts/envelopes\n\t\t})\n\t\treturn(\n\t\t\t<Container className=\"Game-header\">\n\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t  \t\t<h4 className='Play-status'>{this.props.winner}'s letter reached the Princess!</h4>\n\t\t\t  \t</Row>\n\t\t\t  \t<Row style={{margin: 'auto'}}> \n\t\t\t  \t\t<ListGroup>\n\t\t\t  \t\t\t{Object.entries(points_display).map(([key,value]) => {\n\t\t\t\t\t\t\treturn <ListGroup.Item key={key} className='List-item-design'>\n\t\t\t\t\t\t\t\t\t\t<Col style={{display: 'inline'}}>{key}</Col>\n\t\t\t\t\t\t\t\t\t\t<Col style={{display: 'inline'}}>{value}</Col>\n\t\t\t\t\t\t\t\t\t</ListGroup.Item>})}\n\t\t\t\t\t</ListGroup>\n\t\t\t  \t</Row>\n\t\t\t  \t<Row style={{width: '50vw'}}> \n\t\t\t  \t\t{final_winner!=\" \"? <Button size=\"lg\" block className='Confirm-button' onClick={(e) => this.sendResults(final_winner, e)}>OK</Button>\n\t\t\t  \t\t\t:<Button size=\"lg\" block className='Confirm-button' onClick={(e) => this.sendResults(final_winner, e)}>Start Next Round</Button>}\n\t\t\t  \t</Row>\n\t\t\t</Container> \n\t\t);\n\t}\n}\n\nexport default Results;\n","import React from 'react';\nimport './Game.css';\nimport Round from './Round.js';\nimport Landing from './Landing.js';\nimport Results from './Results.js';\n\nclass Game extends React.Component {\n\t\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tgameStatus: 0, /* 0-landing screen start game, 1- in round, 2- round results, 3-landing screen end game*/\n\t\t\ttoStartGame: true,\n\t\t\trounds_played: 0,\n\t\t\tall_players: [],\n\t\t\tpoints: {  //socket.player_points,\n\t\t\t\t\t\t\"p1\" : 0,\n\t\t\t\t\t\t\"p2\" : 0,\n\t\t\t\t\t\t\"p3\" : 0\n\t\t\t\t\t},\n\t\t\tround_winner: \" \"\n\t\t};\n\t\tthis.landingCallback = this.landingCallback.bind(this);\n\t\tthis.roundCallback = this.roundCallback.bind(this);\n\t\tthis.resultsCallback = this.resultsCallback.bind(this);\n\t}\n\n\tlandingCallback = (landingData, all_players) => {\n\t\tthis.setState({\n\t\t\tgameStatus: landingData,\n\t\t\tall_players: all_players\n\t\t})\n\t}\n\n\troundCallback = (roundData) => {\n\t\tconst winner = roundData;\n\t\tlet new_points = this.state.points;\n\t\tnew_points[winner] = new_points[winner]+1;\n\t\tthis.setState({\n\t\t\trounds_played: this.state.rounds_played+1,\n\t\t\tpoints: new_points,\n\t\t\tgameStatus: 2,\n\t\t\tround_winner: winner\n\t\t});\n\t}\n\n\tresultsCallback = (resultsData) => {\n\t\tif(resultsData!=\" \") {\n\t\t\tthis.setState({\n\t\t\t\tgameStatus: 3,\n\t\t\t\tround_winner: resultsData\n\t\t\t});\n\t\t\tconsole.log('results='+resultsData);\n\t\t\tconsole.log('set state=3');\n\t\t}\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\tgameStatus: 1\n\t\t\t});\n\t\t\tconsole.log('set state=1');\n\t\t}\n\t}\n\n\trender() {\n\t\tif (this.state.gameStatus==0)\n\t\t\treturn (<Landing toStartGame={this.state.toStartGame} gameCallback = {this.landingCallback}/>);\n\t\telse if (this.state.gameStatus==1)\n\t\t    return (<Round gameCallback={this.roundCallback} all_players={this.state.all_players}/>);\n\t\telse if (this.state.gameStatus==2)\n\t\t\treturn(<Results points={this.state.points} winner={this.state.round_winner} gameCallback={this.resultsCallback}/>);\n\t\telse\n\t\t\treturn (<Landing toStartGame={false} final_winner={this.state.round_winner} gameCallback = {this.landingCallback}/>);\n\t}\n}\n\nexport default Game;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\nimport * as serviceWorker from './serviceWorker';\n\nimport socket from './socket-context'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Game />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}