{"version":3,"sources":["../assets/cards sync /^/.//.*/.png$","../assets/cards/Assassin.png","../assets/cards/Baron.png","../assets/cards/Baroness.png","../assets/cards/Bishop.png","../assets/cards/Cardinal.png","../assets/cards/Constable.png","../assets/cards/Count.png","../assets/cards/Countess.png","../assets/cards/Dowager Queen.png","../assets/cards/Guard.png","../assets/cards/Handmaid.png","../assets/cards/Jester.png","../assets/cards/King.png","../assets/cards/Priest.png","../assets/cards/Prince.png","../assets/cards/Princess.png","../assets/cards/Sycophant.png","Cards.js","../assets/values.js","CardCarousel.js","PlayCard.js","Round.js","socket-context.js","Landing.js","Results.js","Game.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Cards","props","clickCard","setState","opacity","console","log","state","bind","require","this","cardname","Card","hoverable","onClick","style","className","Body","padding","Img","src","getCard","React","Component","Values","CardCarousel","name","playedCardlist","played_cards","addCard","item","width","marginLeft","PlayCard","selectedPlayer","selectPlayer","endPlay","getList","valuesToSend","current_cards","currentPlayer","cardRemaining","results","roundCallback","cardPlayed","ListGroup","all_players","i","Item","action","key","Row","margin","Button","size","block","Round","discard","discardMode","cardToPlay","playCardCallback","playCardData","winner","gameCallback","playStatus","player_points","drawCard","selectCard","drawn","draw_pile","splice","chosen","remaining","currentCard","drawnCard","Container","Col","display","disabled","socket","W3CWebSocket","window","location","protocol","host","Landing","startGame","startNewGame","endGame","gameOn","onopen","send","onmessage","event","obj","JSON","parse","data","in","toStartGame","final_winner","Results","sendResults","points_display","points","entries","value","stars","Game","landingCallback","landingData","gameStatus","roundData","new_points","rounds_played","round_winner","resultsCallback","resultsData","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6020e8f5.chunk.js","sourcesContent":["var map = {\n\t\"./Assassin.png\": 39,\n\t\"./Baron.png\": 40,\n\t\"./Baroness.png\": 41,\n\t\"./Bishop.png\": 42,\n\t\"./Cardinal.png\": 43,\n\t\"./Constable.png\": 44,\n\t\"./Count.png\": 45,\n\t\"./Countess.png\": 46,\n\t\"./Dowager Queen.png\": 47,\n\t\"./Guard.png\": 48,\n\t\"./Handmaid.png\": 49,\n\t\"./Jester.png\": 50,\n\t\"./King.png\": 51,\n\t\"./Priest.png\": 52,\n\t\"./Prince.png\": 53,\n\t\"./Princess.png\": 54,\n\t\"./Sycophant.png\": 55\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 21;","module.exports = __webpack_public_path__ + \"static/media/Assassin.6c7b8198.png\";","module.exports = __webpack_public_path__ + \"static/media/Baron.ac315008.png\";","module.exports = __webpack_public_path__ + \"static/media/Baroness.1c5a87ee.png\";","module.exports = __webpack_public_path__ + \"static/media/Bishop.0b0e0959.png\";","module.exports = __webpack_public_path__ + \"static/media/Cardinal.c7b46de0.png\";","module.exports = __webpack_public_path__ + \"static/media/Constable.f6ac8dd7.png\";","module.exports = __webpack_public_path__ + \"static/media/Count.67f8d8d4.png\";","module.exports = __webpack_public_path__ + \"static/media/Countess.6e495d6c.png\";","module.exports = __webpack_public_path__ + \"static/media/Dowager Queen.51a0834e.png\";","module.exports = __webpack_public_path__ + \"static/media/Guard.13b4141c.png\";","module.exports = __webpack_public_path__ + \"static/media/Handmaid.4af99d42.png\";","module.exports = __webpack_public_path__ + \"static/media/Jester.845851da.png\";","module.exports = __webpack_public_path__ + \"static/media/King.52d72f4c.png\";","module.exports = __webpack_public_path__ + \"static/media/Priest.2ef7dd82.png\";","module.exports = __webpack_public_path__ + \"static/media/Prince.fece33d0.png\";","module.exports = __webpack_public_path__ + \"static/media/Princess.2f3b56ce.png\";","module.exports = __webpack_public_path__ + \"static/media/Sycophant.09602aa7.png\";","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Game.css';\n\nclass Cards extends React.Component {\n\t\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \topacity: 1\n\t\t};\n\t    this.clickCard = this.clickCard.bind(this);\n\t}\n\n\tgetCard() {\n\t\treturn require('../assets/cards/'+this.props.cardname+'.png');\n\t}\n\n\tclickCard = () => {\n\t\tthis.setState({\n\t\t\topacity: 0.9\n\t\t});\n\t\tconsole.log(\"inner click\")\n\t}\n\n\trender() {\n\t\treturn(\n\t\t  \t<Card hoverable=\"true\" onClick={this.clickCard} style={{opacity: this.state.opacity}} className='Card-design'>\n\t\t      <Card.Body style={{ padding: 0 }}>\n\t\t        <Card.Img src={this.getCard()}/>\n\t\t      </Card.Body>\n\t\t    </Card>\n\t\t);\n\t}\n}\n\nexport default Cards;\n\n","export const Values = {\n\t\"num_players\" : 3,\n\t\"all_players\" : [\"p1\", \"p2\", \"p3\"],\n\t\"all_cards\" : [\"Jester\", \"Assassin\", \"Guard\", \"Priest\", \"Princess\", \"Baron\"],\n\t\"player_points\" : {\n\t\t\"p1\" : 0,\n\t\t\"p2\" : 0,\n\t\t\"p3\" : 0\n\t},\n\t\"played_cards\" : [\"Guard\", \"Priest\", \"Princess\"],\n\t\"current_cards\" : {\n\t\t\"p1\" : \"Priest\", \n\t\t\"p2\" : \"Jester\", \n\t\t\"p3\" : \"Baron\"\n\t},\n\t\"draw_pile\" : [\"Assassin\", \"Guard\", \"Priest\", \"Baron\"],\n\n};","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {Values} from '../assets/values.js';\nimport './Game.css';\n\nclass CardCarousel extends React.Component {\n\tgetCard(name) {\n\t\treturn require('../assets/cards/'+name+'.png');\n\t}\t\n\trender() {\n\t\tlet playedCardlist = Values.played_cards;\n\t\tif(this.props.addCard!= \" \") {\n\t\t\tplayedCardlist = [...playedCardlist, this.props.addCard];\n\t\t}\n\t\treturn(\n\t\t  \t<div className='Card-carousel'> \n\t\t\t  \t{playedCardlist.map((item) => \n\t\t\t  \t\t<div id={item}>\n\t\t\t  \t\t\t<Card style={{ width: '6rem', marginLeft: '2px' }}>\n\t\t\t\t\t      <Card.Body style={{ padding: 0 }}>\n\t\t\t\t\t        <Card.Img src={this.getCard(item)}/>\n\t\t\t\t\t      </Card.Body>\n\t\t\t\t\t    </Card>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t  \t</div>\n\t\t);\n\t}\n}\n\nexport default CardCarousel;\n\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Multiselect from 'react-bootstrap-multiselect';\nimport './Game.css';\nimport {Values} from '../assets/values.js';\nimport {Container, Row, Col} from 'react-bootstrap';\n\n\nclass PlayCard extends React.Component {\n\t\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tselectedPlayer: \" \"\n\t    }\n\t    this.selectPlayer = this.selectPlayer.bind(this);\n\t\tthis.endPlay = this.endPlay.bind(this);\n\t\tthis.getList = this.getList.bind(this);\n\t}\n\n\tselectPlayer(id){ \n\t\tthis.setState({\n\t\t\tselectedPlayer: id //turn that item disabled also\n\t\t});\n\t}\n\n\tendPlay() {\n\t\tconst valuesToSend = {};\n\t\tvaluesToSend[this.state.selectedPlayer] = Values.current_cards[this.state.selectedPlayer];\n\t\tvaluesToSend[this.props.currentPlayer] = this.props.cardRemaining;\n\t\tconsole.log(valuesToSend);\n\t\t//getResult(valuesToSend);\n\t\tconst results = {} //0 : no change (ex.Priest)\n\t\tresults[this.state.selectedPlayer] = 1;//won\n\t\tresults[this.props.currentPlayer] = -1;//lost and eliminated\n\t\t//display the result\n\t\tthis.props.roundCallback(results);\n\t}\n\n\tgetList() {\n\t\t//clean up list diaplay alignment also\n\t\t//Eliminated?? ICON!\n\t\t//Make sure you cant select yourself unless allowed\n\t\tvar list = null;\n\t\tif(this.props.cardPlayed in [\"Assassin\", \"Constable\", \"Count\", \"Countess\", \"Handmaid\", \"Princess\"]) {\n\t\t\tlist = {}; //no selection reqd\n\t\t}\n\t\telse if(this.props.cardPlayed==\"Baroness\") {\n\t\t\tlist = (<ListGroup>\n\t  \t\t\t{Values.all_players.map((item, i) => {\n\t\t\t\t\t\treturn <ListGroup.Item action className='List-item-design' key={item} onClick={(e) => this.selectPlayer(item, e)}>{item}</ListGroup.Item>})}\n\t\t\t</ListGroup>); //1 or 2 selection\n\t\t}\n\t\telse if(this.props.cardPlayed==\"Cardinal\") {\n\t\t\tlist = (<ListGroup>\n\t  \t\t\t{Values.all_players.map((item, i) => {\n\t\t\t\t\t\treturn <ListGroup.Item action className='List-item-design' key={item} onClick={(e) => this.selectPlayer(item, e)}>{item}</ListGroup.Item>})}\n\t\t\t</ListGroup>); //2 selection\n\t\t}\n\t\telse {\n\t\t\tlist = (<ListGroup>\n\t  \t\t\t{Values.all_players.map((item, i) => {\n\t\t\t\t\t\treturn <ListGroup.Item action className='List-item-design' key={item} onClick={(e) => this.selectPlayer(item, e)}>{item}</ListGroup.Item>})}\n\t\t\t</ListGroup>); //1 selection\n\t  \t}\n\t\treturn list;\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Row style={{margin: 'auto'}}>\n\t\t\t\t\t{this.getList()}\n\t\t\t\t</Row>\n\t\t\t\t<Row style={{width: '50vw'}}> \n\t\t\t\t\t<Button size=\"lg\" block className='Confirm-button' onClick={this.endPlay}>OK</Button>\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PlayCard;\n\n\n\n/*<ListGroup>\n\t\t{Values.all_players.map((item, i) => {\n\t\t\treturn <ListGroup.Item action className='List-item-design' key={item} onClick={(e) => this.selectPlayer(item, e)}>{item}</ListGroup.Item>})}\n</ListGroup>*/","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport './Game.css';\nimport Cards from './Cards.js';\nimport CardCarousel from './CardCarousel.js';\nimport PlayCard from './PlayCard.js';\nimport {Values} from '../assets/values.js';\nimport {Container, Row, Col} from 'react-bootstrap';\n\n\nclass Round extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \topacity: 1,\n\t\t    cardToPlay: \" \",\n\t\t    cardRemaining: \" \",\n\t\t    discardMode: false,\n\t\t    currentPlayer: \"p1\",\n\t\t    playStatus: \"p1\"+\" is discarding\",\n\t\t    results: Values.player_points,\n\t\t    winner: \"p1\"\n\t\t};\n\t    this.drawCard = this.drawCard.bind(this);\n\t    this.selectCard = this.selectCard.bind(this);\n\t    this.discard = this.discard.bind(this);\n\t    this.endPlay = this.endPlay.bind(this);\n\t    this.playCardCallback = this.playCardCallback.bind(this);\n\t}\n\n\tdrawCard() {\n\t\tconst drawn = Values.draw_pile[0];\n\t\t//drawCard();\n\t\tconsole.log(Values.draw_pile.splice(0, 0)); //check syntax\n\t\treturn drawn;\n\t}\n\n\tselectCard(chosen, remaining) {\n\t\tthis.setState({\n\t\t\tcardToPlay: chosen,\n\t\t\tcardRemaining: remaining,\n\t\t\topacity: 0.9\n\t\t});\n    \tconsole.log('Clicked ' + this.state.cardToPlay);\n  \t}\n\n  \tdiscard = () => {\n  \t\tthis.setState({\n\t\t\tdiscardMode: true\n\t\t});\n  \t\tconsole.log('Discarding ' + this.state.cardToPlay);\n  \t}\n\n  \tendPlay = () => {\n  \t\tthis.setState({\n\t\t\tdiscardMode: false\n\t\t});\n  \t\tconsole.log('Ending Play');\n  \t}\n\n  \tplayCardCallback = (playCardData) => {\n  \t\tthis.setState({\n  \t\t\tresults: playCardData, //check if round is over based on backend logic\n  \t\t\twinner: \"p1\", //check who won; if no one yet, keep blank\n  \t\t});\n  \t\tif(this.state.winner!=\" \") {\n\t\t\tthis.props.gameCallback(this.state.winner);\n\t\t}\n\t\telse {\n\t\t\tthis.endPlay();\n\t\t}\n  \t}\n\n\trender() {\n\t\tconst currentCard = Values.current_cards[this.state.currentPlayer];\n\t\tconst drawnCard = this.drawCard();\n\t\tconsole.log('in round');\n\t\tif(this.state.discardMode) {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<CardCarousel addCard={this.state.cardToPlay}/>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<h4 className='Play-status'>{this.state.playStatus}</h4>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t\t<PlayCard currentPlayer = {this.state.currentPlayer} cardPlayed={this.state.cardToPlay} cardRemaining={this.state.cardRemaining} roundCallback={this.playCardCallback}/>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t} \n\t\telse {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<CardCarousel addCard={\" \"}/>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<h4 className='Play-status'>{this.state.playStatus}</h4>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<Col style={{display: \"inline-flex\"}} onClick={(e) => this.selectCard(currentCard, drawnCard, e)}>\n\t\t\t\t  \t\t\t<Cards cardname={currentCard}/>\n\t\t\t\t  \t\t</Col>\n\t\t\t\t  \t\t<Col style={{display: \"inline-flex\"}} onClick={(e) => this.selectCard(drawnCard, currentCard, e)}>\n\t\t\t\t  \t\t\t<Cards cardname={drawnCard}/>\n\t\t\t\t  \t\t</Col>\n\t\t\t\t  \t</Row> \n\t\t\t\t  \t<Row style={{width: '50vw'}}> \n\t\t\t\t  \t\t<Button size=\"lg\" block className='Confirm-button' disabled={this.state.cardToPlay==\" \"} onClick={this.discard}>Discard</Button>\n\t\t\t\t  \t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default Round;\n","import { w3cwebsocket as W3CWebSocket } from \"websocket\"\n\nconst socket = new W3CWebSocket(((window.location.protocol === \"https:\") ? \"wss://\" : \"ws://\") + window.location.host + \"/ws\")\n\n\n\nexport default socket;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport './Game.css';\n//import {Values} from '../assets/values.js';\nimport {Container, Row, Col} from 'react-bootstrap';\n\nimport socket from './socket-context'\n\n\nclass Landing extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tgameOn: true\n\t    };\n\t   \tthis.startGame = this.startGame.bind(this);\n\t   \tthis.startNewGame = this.startNewGame.bind(this);\n\t   \tthis.endGame = this.endGame.bind(this);\n\t   \tthis.all_players = []\n\t   \tsocket.onopen = () => {\n\t\t\tconsole.log('WebSocket Client Connected');\n\t\t\tsocket.send('Hello Server!');\n\t\t\tsocket.send('players')\n\t\t};\n\n\n\t   \tsocket.onmessage = (event) => {\n\t   \t\tconsole.log(event)\n\t   \t\tvar obj = JSON.parse(event.data);\n\t   \t\tthis.all_players = obj.in\n\t   \t\tconsole.log(obj.in)\n\t   \t}\n\t}\n\n\tstartGame = () => {\n\t\tthis.props.gameCallback(1);\n\t}\n\n\tstartNewGame = () => {\n\t\tthis.props.gameCallback(0);\n\t}\n\n\tendGame = () => {\n\t\tthis.setState({\n\t\t\tgameOn: false //remove this player from the game metadata; it could still go on\n\t\t});\n\t}\n\n\n\trender() {\n\t\tif(this.props.toStartGame) {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t\t  \t\t<h4 className='Play-status'>Waiting For Players...</h4>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t\t  \t\t<ListGroup>\n\t\t\t\t  \t\t\t{this.all_players.map((item, i) => {\n\t\t  \t\t\t\t\t\treturn <ListGroup.Item className='List-item-design'>{item}</ListGroup.Item>})}\n\t\t\t\t\t\t</ListGroup>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row style={{width: '50vw'}}> \n\t\t\t\t  \t\t<Button size=\"lg\" block className='Confirm-button' onClick={this.startGame}>Start Game</Button>\n\t\t\t\t  \t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t} \n\t\telse {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t<Row style={{margin: 'auto'}}>\n\t\t\t\t  \t<h4 className='Play-status'>{this.props.final_winner} won the game!</h4>\n\t\t\t  \t</Row>\n\t\t\t  \t<Row style={{margin: 'auto'}}> \n\t\t\t  \t\t<Col><Button size=\"lg\" style={{width: '30vw'}} block className='Confirm-button' onClick={this.endGame}>Leave Game</Button></Col>\n\t\t\t  \t\t<Col><Button size=\"lg\" style={{width: '30vw'}} block className='Confirm-button' onClick={this.startNewGame}>Start New Game</Button></Col>\n\t\t\t  \t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default Landing;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport FA from 'react-fontawesome';\nimport './Game.css';\nimport {Container, Row, Col} from 'react-bootstrap';\n\n\nclass Results extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.sendResults = this.sendResults.bind(this);\n\t}\n\n\tsendResults(final_winner) {\n\t\tconsole.log('Sent winner='+final_winner);\n\t\tthis.props.gameCallback(final_winner);\n\t}\n\n\trender() {\n\t\tconst points_display = this.props.points; //games won\n\t\tlet final_winner = \"p1\";\n\t\tObject.entries(points_display).map(([key,value]) => {\n\t\t\tif (value>=4) {\n\t\t\t\tfinal_winner = key;\n\t\t\t}\n\t\t\tlet stars = \"\";\n\t\t\tfor(let i=0;i<value;i++)\n\t\t\t\tstars+=\"*\";\n\t\t\tpoints_display[key] = stars; // Fontawesome hearts/envelopes\n\t\t})\n\t\treturn(\n\t\t\t<Container className=\"Game-header\">\n\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t  \t\t<h4 className='Play-status'>{this.props.winner}'s letter reached the Princess!</h4>\n\t\t\t  \t</Row>\n\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t  \t\t<ListGroup>\n\t\t\t  \t\t\t{Object.entries(points_display).map(([key,value]) => {\n\t\t\t\t\t\t\treturn <ListGroup.Item className='List-item-design'>\n\t\t\t\t\t\t\t\t\t\t<Col style={{display: 'inline'}}>{key}</Col>\n\t\t\t\t\t\t\t\t\t\t<Col style={{display: 'inline'}}>{value}</Col>\n\t\t\t\t\t\t\t\t\t</ListGroup.Item>})}\n\t\t\t\t\t</ListGroup>\n\t\t\t  \t</Row>\n\t\t\t  \t<Row style={{width: '50vw'}}> \n\t\t\t  \t\t{final_winner!=\" \"? <Button size=\"lg\" block className='Confirm-button' onClick={(e) => this.sendResults(final_winner, e)}>OK</Button>\n\t\t\t  \t\t\t:<Button size=\"lg\" block className='Confirm-button' onClick={(e) => this.sendResults(final_winner, e)}>Start Next Round</Button>}\n\t\t\t  \t</Row>\n\t\t\t</Container> \n\t\t);\n\t}\n}\n\nexport default Results;\n","import React from 'react';\nimport './Game.css';\nimport Round from './Round.js';\nimport Landing from './Landing.js';\nimport Results from './Results.js';\nimport {Values} from '../assets/values.js';\n\n\n\n\n\nclass Game extends React.Component {\n\t\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tgameStatus: 0, /* 0-landing screen start game, 1- in round, 2- round results, 3-landing screen end game*/\n\t\t\ttoStartGame: true,\n\t\t\trounds_played: 0,\n\t\t\tpoints: Values.player_points,\n\t\t\tround_winner: \" \"\n\t\t};\n\t\tthis.landingCallback = this.landingCallback.bind(this);\n\t\tthis.roundCallback = this.roundCallback.bind(this);\n\t\tthis.resultsCallback = this.resultsCallback.bind(this);\n\t}\n\n\tlandingCallback = (landingData) => {\n\t\tthis.setState({\n\t\t\tgameStatus: landingData\n\t\t})\n\t}\n\n\troundCallback = (roundData) => {\n\t\tconst winner = roundData;\n\t\tlet new_points = this.state.points;\n\t\tnew_points[winner] = new_points[winner]+1;\n\t\tthis.setState({\n\t\t\trounds_played: this.state.rounds_played+1,\n\t\t\tpoints: new_points,\n\t\t\tgameStatus: 2,\n\t\t\tround_winner: winner\n\t\t});\n\t}\n\n\tresultsCallback = (resultsData) => {\n\t\tif(resultsData!=\" \") {\n\t\t\tthis.setState({\n\t\t\t\tgameStatus: 3,\n\t\t\t\tround_winner: resultsData\n\t\t\t});\n\t\t\tconsole.log('results='+resultsData);\n\t\t\tconsole.log('set state=3');\n\t\t}\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\tgameStatus: 1\n\t\t\t});\n\t\t\tconsole.log('set state=1');\n\t\t}\n\t}\n\n\trender() {\n\t\tif (this.state.gameStatus==0)\n\t\t\treturn (<Landing toStartGame={this.state.toStartGame} gameCallback = {this.landingCallback}/>);\n\t\telse if (this.state.gameStatus==1)\n\t\t    return (<Round gameCallback={this.roundCallback}/>);\n\t\telse if (this.state.gameStatus==2)\n\t\t\treturn(<Results points={this.state.points} winner={this.state.round_winner} gameCallback={this.resultsCallback}/>);\n\t\telse\n\t\t\treturn (<Landing toStartGame={false} final_winner={this.state.round_winner} gameCallback = {this.landingCallback}/>);\n\t}\n}\n\nexport default Game;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\nimport * as serviceWorker from './serviceWorker';\n\nimport socket from './socket-context'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Game />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}