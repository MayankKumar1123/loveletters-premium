{"version":3,"sources":["../assets/cards sync /^/.//.*/.jpeg$","../assets/cards/Assassin.jpeg","../assets/cards/Baron.jpeg","../assets/cards/Baroness.jpeg","../assets/cards/Bishop.jpeg","../assets/cards/Cardinal.jpeg","../assets/cards/Constable.jpeg","../assets/cards/Count.jpeg","../assets/cards/Countess.jpeg","../assets/cards/Dowager Queen.jpeg","../assets/cards/Guard.jpeg","../assets/cards/Handmaid.jpeg","../assets/cards/Jester.jpeg","../assets/cards/King.jpeg","../assets/cards/Priest.jpeg","../assets/cards/Prince.jpeg","../assets/cards/Princess.jpeg","../assets/cards/Sycophant.jpeg","../assets/cards/loading_card.jpeg","Cards.js","CardCarousel.js","PlayCard.js","Round.js","Landing.js","Results.js","socket-context.js","Game.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Cards","props","clickCard","setState","opacity","state","selected","bind","require","this","cardname","Card","onClick","className","Body","style","padding","Button","variant","Img","src","getCard","React","Component","CardCarousel","name","playedCardlist","undefined","allCardsDiscarded","item","key","width","marginLeft","PlayCard","selectedPlayers","syco","selectionSatisfied","selectedNumber","num_disabled_players","immune","length","eliminated","num_players","all_players","selectPlayer","selectNumber","endPlay","getList","type","x","cardPlayed","indexOf","splice","concat","console","log","valuesToSend","currentPlayer","roundCallback","list","enableCurrent","choiceType","isImmune","isSyco","isEliminated","ListGroup","entries","value","Item","disabled","float","icon","faShieldAlt","faHandshake","faSkull","Row","justifyContent","Col","i","paddingTop","margin","size","block","Round","discard","playMode","discard_pile","cardToPlay","endTurn","results","roundWinner","gameCallback","socket","send","JSON","stringify","playCardCallback","playCardData","cardRemaining","playStatus","currentCards","prevTurnMessage","getTurn","getResults","selectCard","obj","player","cards","sycho","prevTurn","chosen","remaining","userID","currentCard","username","drawnCard","Container","display","statusMsg","resultMsg","card1","card2","player1","player2","Landing","startGame","leaveGame","gameOn","showStartButton","gameStatus","getPlayers","getStartGame","plyrs","uid","host","leavingGame","Results","points_display","points","displayIcon","faHeart","spaceIcon","icons","allPlayers","winner","gameWinner","W3CWebSocket","window","location","protocol","Game","landingCallback","landingData","roundData","rounds_played","tokens","resultsCallback","resultsData","landingRef","createRef","roundRef","onopen","onmessage","event","parse","data","current","ref","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bfa9fea3.chunk.js","sourcesContent":["var map = {\n\t\"./Assassin.jpeg\": 189,\n\t\"./Baron.jpeg\": 190,\n\t\"./Baroness.jpeg\": 191,\n\t\"./Bishop.jpeg\": 192,\n\t\"./Cardinal.jpeg\": 193,\n\t\"./Constable.jpeg\": 194,\n\t\"./Count.jpeg\": 195,\n\t\"./Countess.jpeg\": 196,\n\t\"./Dowager Queen.jpeg\": 197,\n\t\"./Guard.jpeg\": 198,\n\t\"./Handmaid.jpeg\": 199,\n\t\"./Jester.jpeg\": 200,\n\t\"./King.jpeg\": 201,\n\t\"./Priest.jpeg\": 202,\n\t\"./Prince.jpeg\": 203,\n\t\"./Princess.jpeg\": 204,\n\t\"./Sycophant.jpeg\": 205,\n\t\"./loading_card.jpeg\": 206\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 102;","module.exports = __webpack_public_path__ + \"static/media/Assassin.378bfb5f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Baron.746fcb29.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Baroness.9412a60f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Bishop.dc3946bc.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Cardinal.25c40e09.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Constable.30fe3a5c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Count.33b17be7.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Countess.b39b3239.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Dowager Queen.f88d1e27.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Guard.d9e4ee43.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Handmaid.2184414b.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Jester.c3c265f4.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/King.49f2efa9.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Priest.79047ce6.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Prince.84d1cfb6.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Princess.dbe5ffb7.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Sycophant.67d055f9.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/loading_card.e650822c.jpeg\";","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Game.css';\n\nclass Cards extends React.Component {\n\t\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tselected: 1\n\t\t};\n\t    this.clickCard = this.clickCard.bind(this);\n\t}\n\n\tgetCard() {\n\t\treturn require('../assets/cards/'+this.props.cardname+'.jpeg');\n\t}\n\n\tclickCard = () => {\n\t\tthis.setState({\n\t\t\topacity: 0.9\n\t\t});\n\t}\n\n\trender() {\n\t\treturn(\n\t  \t\t<Card onClick={this.clickCard} className='Card-design'>\n\t\t\t    <Card.Body style={{ padding: 0 }}>\n\t\t\t    \t<Button className='card-button' variant=\"info\">\n\t\t\t        \t<Card.Img src={this.getCard()}/>\n\t\t\t        </Button>\n\t\t\t    </Card.Body>\n\t    \t</Card>\n\t\t    \n\t\t);\n\t}\n}\n\nexport default Cards;\n\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Game.css';\n\nclass CardCarousel extends React.Component {\n\tgetCard(name) {\n\t\treturn require('../assets/cards/'+name+'.jpeg');\n\t}\t\n\trender() {\n\t\tlet playedCardlist = [];\n\t\tif(this.props.allCardsDiscarded!==undefined)\n\t\t\tplayedCardlist = this.props.allCardsDiscarded;\n\t\t\n\t\treturn(\n\t\t  \t<div className='Card-carousel'> \n\t\t\t  \t{playedCardlist.map((item) => \n\t\t\t  \t\t<div key={item}>\n\t\t\t  \t\t\t<Card style={{ width: '6rem', marginLeft: '2px' }}>\n\t\t\t\t\t      <Card.Body style={{ padding: 0 }}>\n\t\t\t\t\t        <Card.Img src={this.getCard(item)}/>\n\t\t\t\t\t      </Card.Body>\n\t\t\t\t\t    </Card>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t  \t</div>\n\t\t);\n\t}\n}\n\nexport default CardCarousel;\n\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport './Game.css';\nimport {Row, Col} from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faShieldAlt, faHandshake, faSkull} from '@fortawesome/free-solid-svg-icons';\n\nclass PlayCard extends React.Component {\n\t\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tselectedPlayers: this.props.syco,\n\t    \tselectionSatisfied: false,\n\t    \tselectedNumber: -1,\n\t    \tnum_disabled_players: this.props.immune.length + this.props.eliminated.length,\n\t    \tnum_players: Object.keys(this.props.all_players).length\n\t    }\n\t    this.selectPlayer = this.selectPlayer.bind(this);\n\t    this.selectNumber = this.selectNumber.bind(this);\n\t\tthis.endPlay = this.endPlay.bind(this);\n\t\tthis.getList = this.getList.bind(this);\n\t}\n\n\tselectPlayer(type, item){ \n\t\tlet selectedPlayers = this.state.selectedPlayers;\n\t\tlet x = 0;\n\t\t\n\t\tif(type==='single') {\n\t\t\tif(this.state.num_disabled_players === this.state.num_players-1 //only current player is eligible\n\t\t\t\t && this.props.cardPlayed!==\"Prince\" && this.props.cardPlayed!==\"Sycophant\") {\n\t\t\t\t\tthis.setState({selectionSatisfied: true});\n\t\t\t} else {\n\t\t\t\tif(this.props.syco.length===0) //no sycophants; proceed as normal\n\t\t\t\t\tselectedPlayers = [item];\n\t\t\t\t\n\t\t\t\tif(this.props.cardPlayed!==\"Guard\" && this.props.cardPlayed!==\"Bishop\")\n\t\t\t\t\tthis.setState({selectionSatisfied: true, selectedPlayers: selectedPlayers});\n\t\t\t\telse\n\t\t\t\t\tthis.setState({selectedPlayers: selectedPlayers});\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif(this.props.syco.length===0 || !this.props.syco.indexOf(item)>=0) { //this item is not a sycophant\n\t\t\t\tx = selectedPlayers.indexOf(item);\n\t\t\t\tif(x!==undefined && x>=0) {\n\t\t\t\t\tselectedPlayers.splice(x, 1);\n\t\t\t\t} else {\n\t\t\t\t\tselectedPlayers = selectedPlayers.concat(item);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(type==='double') {\n\t\t\t\tif(this.state.num_disabled_players === this.state.num_players-1) { //only current player is eligible but 2 to choose\n\t\t\t\t\tthis.setState({selectionSatisfied: true});\n\t\t\t\t} else if(this.state.num_disabled_players >= this.state.num_players-2 //only 2 players are eligible including current\n\t\t\t\t\t\t&& this.props.cardPlayed!==\"Cardinal\") { \n\t\t\t\t\t\t\tthis.setState({selectionSatisfied: true});\n\t\t\t\t} else {\n\t\t\t\t\tif(selectedPlayers.length===2) {\n\t\t\t\t\t\t\tthis.setState({selectionSatisfied: true, selectedPlayers: selectedPlayers});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setState({selectionSatisfied: false, selectedPlayers: selectedPlayers});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else { // type is 'either'\n\t\t\t\tif(this.state.num_disabled_players === this.state.num_players-1) {//only current player is eligible\n\t\t\t\t\t\tthis.setState({selectionSatisfied: true});\n\t\t\t\t} else {\n\t\t\t\t\tif(selectedPlayers.length===1 || selectedPlayers.length===2) {\n\t\t\t\t\t\tthis.setState({selectionSatisfied: true, selectedPlayers: selectedPlayers});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setState({selectionSatisfied: false, selectedPlayers: selectedPlayers});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t\tconsole.log('selected player ids:'+selectedPlayers)\n\t}\n\n\tselectNumber(item) {\n\t\tthis.setState({selectionSatisfied: true, selectedNumber: item});\n\t\tconsole.log('selected number:'+item);\n\t}\n\n\tendPlay() {\n\t\tconst valuesToSend = {};\n\t\tvaluesToSend['type'] = 'discard';\n\t\tvaluesToSend['player'] = this.props.currentPlayer;\n\t\tvaluesToSend['card'] = this.props.cardPlayed;\n\t\tvaluesToSend['player1'] = null;\n\t\tvaluesToSend['player2'] = null;\n\t\tvaluesToSend['number'] = null;\n\n\t\tif(this.state.selectedPlayers.length>0)\n\t\t\tvaluesToSend['player1'] = this.state.selectedPlayers[0];\n\t\tif(this.state.selectedPlayers.length>1)\n\t\t\tvaluesToSend['player2'] = this.state.selectedPlayers[1];\n\t\tif(this.state.selectedNumber!==-1)\n\t\t\tvaluesToSend['number'] = this.state.selectedNumber;\n\n\t\tconsole.log(valuesToSend);\n\t\tthis.props.roundCallback(valuesToSend);\n\t}\n\n\tgetList() {\n\t\tvar list = null;\n\t\tif([\"Assassin\", \"Constable\", \"Count\", \"Countess\", \"Handmaid\", \"Princess\"].indexOf(this.props.cardPlayed)>=0) { //no action\n\t\t\tlist = null;\n\t\t\tconsole.log('list is null');\n\t\t}\n\t\t\n\t\telse {\n\t\t\tvar enableCurrent = (this.props.cardPlayed===\"Prince\" || this.props.cardPlayed===\"Sycophant\"\n\t\t\t\t\t\t\t\t\t|| this.props.cardPlayed===\"Cardinal\");\n\t\t\tvar choiceType = \"\";\n\t\t\tvar isImmune = false;\n  \t\t\tvar isSyco = false;\n  \t\t\tvar isEliminated = false;\n\n\t\t\tif(this.props.cardPlayed===\"Baroness\") //one or two choices\n\t\t\t\tchoiceType = \"either\";\n\t\t\telse if(this.props.cardPlayed===\"Cardinal\") // two choices\n\t\t\t\tchoiceType = \"double\";\n\t\t\telse // single choice\n\t\t\t\tchoiceType = \"single\";\n\n\t  \t\tlist = (<ListGroup>\n  \t\t\t\t{Object.entries(this.props.all_players).map(([id, value]) => {\n  \t\t\t\t\tisImmune = (this.props.immune.indexOf(id)>=0);\n  \t\t\t\t\tisSyco = (this.props.syco.indexOf(id)>=0);\n  \t\t\t\t\tisEliminated = (this.props.eliminated.indexOf(id)>=0);\n\t\t\t\t\treturn <ListGroup.Item className='List-item-design'\n\t\t\t\t\t\t\t\tvariant={(this.state.selectedPlayers.indexOf(id)>=0)?'dark':'light'}\n\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\tdisabled={(enableCurrent?false:(id===this.props.currentPlayer)) || \n\t\t\t\t\t\t\t\t\t\t\tisImmune || isEliminated}\n\t\t\t\t\t\t\t\tonClick={(e) => this.selectPlayer(choiceType, id, e)}>{value}\n\n\t\t\t\t\t\t\t\t{isImmune?\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon style={{float: 'right'}} icon={faShieldAlt}/>: \n\t\t\t\t\t\t\t\t\t(isSyco?\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon style={{float: 'right'}} icon={faHandshake}/>: \n\t\t\t\t\t\t\t\t\t\t(isEliminated?\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon style={{float: 'right'}} icon={faSkull}/>: \n\t\t\t\t\t\t\t\t\t\t\t<div></div>))}\n\t\t\t\t\t\t\t</ListGroup.Item>})}\n\t\t\t\t</ListGroup>);  \n\t  \t} \n\n\t\treturn list;\n\t}\n\n\trender() {\n\t\tconst list = this.getList();\n\t\tconst card_numbers = [1,2,3,4,5,6,7,8,9];\n\t\tif(list!=null) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Row style={{justifyContent: 'center'}}>\n\t\t\t\t\t\t<Col>{list}</Col>\n\t\t\t\t\t\t{(this.props.cardPlayed===\"Guard\"|| this.props.cardPlayed===\"Bishop\")?\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<ListGroup>\n\t\t\t\t\t  \t\t\t\t{card_numbers.map((item, i) => {\n\t\t\t\t\t\t\t\t\t\treturn <ListGroup.Item className='List-item-design'\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={this.state.selectedNumber===item?'dark':'light'}\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={item} \n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={item===1}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => this.selectNumber(item, e)}>{item}\n\t\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>})}\n\t\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t\t</Col>:\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row style={{width: '50vw', paddingTop: '10px', margin: 'auto'}}> \n\t\t\t\t\t\t<Button size=\"lg\" block className='Confirm-button' \n\t\t\t\t\t\tdisabled={!this.state.selectionSatisfied}\n\t\t\t\t\t\tonClick={this.endPlay}>OK</Button>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn (<div>{this.endPlay()}</div>);\n\t\t}\n\t}\n}\n\nexport default PlayCard;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport './Game.css';\nimport Cards from './Cards.js';\nimport CardCarousel from './CardCarousel.js';\nimport PlayCard from './PlayCard.js';\nimport {Container, Row, Col} from 'react-bootstrap';\n\n\nclass Round extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \topacity: 1,\n\t\t    cardToPlay: \" \",\n\t\t    cardRemaining: \" \",\n\t\t    playMode: 0, // 0-choosing card, 1-playing card, 2-viewing results of turn\n\t\t    currentPlayer: \" \",\n\t\t    playStatus: \" \",\n\t\t    results: {},\n\t\t    currentCards: [],\n\t\t    immune: [],\n\t\t    syco: [],\n\t\t    eliminated: [],\n\t\t    prevTurnMessage: \" \",\n\t\t    discard_pile: []\n\t\t};\n\t    this.getTurn = this.getTurn.bind(this);\n\t    this.getResults = this.getResults.bind(this);\n\t    this.selectCard = this.selectCard.bind(this);\n\t    this.discard = this.discard.bind(this);\n\t    this.endTurn = this.endTurn.bind(this);\n\t    this.playCardCallback = this.playCardCallback.bind(this);\n\n\t\tthis.props.socket.send(JSON.stringify({'type':'nextRound'}));\n    \tconsole.log('sent nextRound')\n\t}\n\t\n\tgetTurn(obj) {\n\t\tthis.setState({\n\t\t\tplayMode: 0, // start new turn\n\t\t\tcurrentPlayer: obj.player,\n\t\t\tcurrentCards: obj.cards,\n\t\t\timmune: obj.immune,\n\t\t    syco: obj.sycho,\n\t\t    eliminated: obj.eliminated,\n\t\t    prevTurnMessage: obj.prevTurn,\n\t\t    playStatus: this.props.all_players[obj.player]+\" is playing\"\n\t\t});\n\t}\n\n\n\tgetResults(obj) {\n\t\tthis.setState({\n  \t\t\tplayMode: 2,\n  \t\t\tresults: obj,\n  \t\t\tdiscard_pile: obj.discard_pile\n\t\t});\n\t}\n\n\tselectCard(chosen, remaining) {\n\t\tthis.setState({\n\t\t\tcardToPlay: chosen,\n\t\t\tcardRemaining: remaining,\n\t\t\topacity: 0.9\n\t\t});\n    \tconsole.log('Clicked ' + this.state.cardToPlay);\n  \t}\n\n  \tdiscard = () => {\n  \t\tthis.setState({\n\t\t\tplayMode: 1,\n\t\t\tdiscard_pile: this.state.discard_pile.concat(this.state.cardToPlay)\n\t\t});\n  \t\tconsole.log('Discarding ' + this.state.cardToPlay);\n  \t}\n\n  \tendTurn = () => {\n  \t\tif(this.state.results.roundWinner!==null) {\n\t\t\tthis.props.gameCallback(this.state.results); //end round\n\t\t\tconsole.log('sent results to Game.js');\n\t\t}\n  \t\telse {\n\t\t\tthis.props.socket.send(JSON.stringify({'type':'nextTurn'}));\n\t  \t\tconsole.log('sent nextTurn for next turn');\n  \t\t}\n  \t}\n\n  \tplayCardCallback = (playCardData) => {\n  \t\tthis.props.socket.send(JSON.stringify(playCardData));\n\t    console.log('sent discard');\n  \t}\n\n\trender() {\n\t\tconsole.log('user = '+this.props.userID);\n\t\tconsole.log('currentPlayer = '+this.state.currentPlayer);\n\t\tconsole.log(this.state.currentCards);\n\n\t\tvar currentCard = this.state.currentCards[0];\n\t\tif(currentCard===undefined)\n\t\t\tcurrentCard=\"loading_card\" // before first render\n\t\t\n\t\tif(this.props.userID === this.state.currentPlayer) {\n\t\t\tconsole.log(this.props.username+ 'is playing');\n\t\t\tvar drawnCard = this.state.currentCards[1];\n\t\t\tif(drawnCard===undefined)\n\t\t\t\tdrawnCard=\"loading_card\" // before first render\n\t\t\t\n\t\t\tif(this.state.playMode===0) {\n\t\t\t\treturn(\n\t\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t\t  \t<Row>\n\t\t\t\t\t  \t\t<CardCarousel allCardsDiscarded={this.state.discard_pile}/>\n\t\t\t\t\t  \t</Row>\n\t\t\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t\t\t  \t\t{this.state.prevTurnMessage!==null?\n\t\t\t\t\t  \t\t\t<h5 className='Play-status'>{this.state.prevTurnMessage}</h5>: <div></div>}\n\t\t\t\t\t  \t</Row>\n\t\t\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t\t\t  \t\t<h4 className='Play-status'>{this.state.playStatus}</h4>\n\t\t\t\t\t  \t</Row>\n\t\t\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t\t\t  \t\t<Col style={{display: \"inline-flex\"}} onClick={(e) => this.selectCard(currentCard, drawnCard, e)}>\n\t\t\t\t\t  \t\t\t<Cards cardname={currentCard}/>\n\t\t\t\t\t  \t\t</Col>\n\t\t\t\t\t  \t\t<Col style={{display: \"inline-flex\"}} onClick={(e) => this.selectCard(drawnCard, currentCard, e)}>\n\t\t\t\t\t  \t\t\t<Cards cardname={drawnCard}/>\n\t\t\t\t\t  \t\t</Col>\n\t\t\t\t\t  \t</Row> \n\t\t\t\t\t  \t<Row style={{width: '50vw'}}> \n\t\t\t\t\t  \t\t<Button size=\"lg\" block className='Confirm-button' disabled={this.state.cardToPlay===\" \"} onClick={this.discard}>Discard</Button>\n\t\t\t\t\t  \t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if(this.state.playMode===1) {\n\t\t\t\treturn(\n\t\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t\t  \t<Row>\n\t\t\t\t\t  \t\t<CardCarousel allCardsDiscarded={this.state.discard_pile}/>\n\t\t\t\t\t  \t</Row>\n\t\t\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t\t\t  \t\t<h4 className='Play-status'>{this.state.playStatus}</h4>\n\t\t\t\t\t  \t</Row>\n\t\t\t\t\t  \t\t<PlayCard currentPlayer={this.state.currentPlayer}\n\t\t\t\t\t  \t\tcardPlayed={this.state.cardToPlay} cardRemaining={this.state.cardRemaining} \n\t\t\t\t\t  \t\troundCallback={this.playCardCallback} all_players={this.props.all_players}\n\t\t\t\t\t  \t\timmune={this.state.immune} syco={this.state.syco} eliminated={this.state.eliminated}/>\n\t\t\t\t\t</Container>\n\t\t\t\t);\n\t\t\t} \n\t\t\telse {\n\t\t\t\treturn (\n\t\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t\t  \t<Row>\n\t\t\t\t\t  \t\t<CardCarousel allCardsDiscarded={this.state.discard_pile}/>\n\t\t\t\t\t  \t</Row>\n\t\t\t\t\t\t<Row style={{margin: 'auto'}}>\n\t\t\t\t\t\t\t<h4 className='Play-status'>{this.state.results.statusMsg}</h4>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row style={{margin: 'auto'}}>\n\t\t\t\t\t\t\t<h3 className='Play-status'>{this.state.results.resultMsg}</h3>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t{this.state.results.card1!==null?\n\t\t\t\t\t\t\t\t<Col style={{display: \"inline-flex\"}}><Cards cardname={this.state.results.card1}/></Col>: <div></div>}\n\t\t\t\t\t\t\t{this.state.results.card2!==null?\n\t\t\t\t\t\t\t\t<Col style={{display: \"inline-flex\"}}><Cards cardname={this.state.results.card2}/></Col>: <div></div>}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row style={{width: '50vw', paddingTop: '10px', margin: 'auto'}}> \n\t\t\t\t\t\t\t<Button size=\"lg\" block className='Confirm-button'\n\t\t\t\t\t\t\tonClick={this.endTurn}>OK</Button>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>);\n\t\t\t}\n\t\t} \n\t\telse if(this.props.userID === this.state.results.player1 || this.props.userID === this.state.results.player2) {\n\t\t\t\n\t\t\tif(this.state.playMode===2) {\n\t\t\t\treturn (\n\t\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t\t  \t<Row>\n\t\t\t\t\t  \t\t<CardCarousel allCardsDiscarded={this.state.discard_pile}/>\n\t\t\t\t\t  \t</Row>\n\t\t\t\t\t\t<Row style={{margin: 'auto'}}>\n\t\t\t\t\t\t\t<h4 className='Play-status'>{this.state.results.statusMsg}</h4>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row style={{margin: 'auto'}}>\n\t\t\t\t\t\t\t<h3 className='Play-status'>{this.state.results.resultMsg}</h3>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row style={{margin: 'auto'}}>\n\t\t\t\t\t\t\t{this.state.results.card1!==null?\n\t\t\t\t\t\t\t\t<Col style={{display: \"inline-flex\"}}><Cards cardname={this.state.results.card1}/></Col>: <div></div>}\n\t\t\t\t\t\t\t{this.state.results.card2!==null?\n\t\t\t\t\t\t\t\t<Col style={{display: \"inline-flex\"}}><Cards cardname={this.state.results.card2}/></Col>: <div></div>}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>);\n\t\t\t}\n\t\t} \n\t\telse {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<CardCarousel allCardsDiscarded={this.state.discard_pile}/>\n\t\t\t\t  \t</Row>\n\t\t\t  \t\t{this.state.playMode===2?\n\t\t\t  \t\t\t\t(<Row style={{margin: 'auto'}}>\n\t\t\t\t\t  \t\t\t<Row style={{margin: 'auto'}}>\n\t\t\t\t\t\t\t\t\t<h4 className='Play-status'>{this.state.results.statusMsg}</h4>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t<Row style={{margin: 'auto'}}>\n\t\t\t\t\t\t\t\t\t<h3 className='Play-status'>{this.state.results.resultMsg}</h3>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</Row>):\n\t\t\t\t\t\t\t(this.state.prevTurnMessage!==null?\n\t\t\t\t\t  \t\t\t(<Row style={{margin: 'auto'}}>\n\t\t\t\t\t  \t\t\t\t<h5 className='Play-status'>{this.state.prevTurnMessage}</h5>\n\t\t\t\t\t  \t\t\t</Row>): <div></div>)}\n\t\t\t\t  \t\n\n\t\t\t\t  \t{this.state.eliminated.indexOf(this.props.userID)>=0?\n\t\t\t\t  \t\t(<Row style={{margin: 'auto'}}>\n\t\t\t\t\t  \t\t<h3 className='Play-status'>You have been eliminated</h3>\n\t\t\t\t\t  \t</Row>):\n\t\t\t\t\t  \t(<div>\n\t\t\t\t\t\t  \t<Row style={{margin: 'auto'}} >\n\t\t\t\t\t\t  \t\t<h3 className='Play-status'>It's not your turn</h3>\n\t\t\t\t\t\t  \t</Row>\n\t\t\t\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t\t\t\t  \t\t<Col style={{display: \"inline-flex\"}}>\n\t\t\t\t\t\t  \t\t\t<Cards cardname={currentCard}/>\n\t\t\t\t\t\t  \t\t</Col>\n\t\t\t\t\t\t  \t</Row>\n\t\t\t\t\t  \t</div>)}\n\t\t\t\t</Container>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default Round;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport './Game.css';\nimport {Container, Row} from 'react-bootstrap';\n\n\nclass Landing extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tgameOn: true,\n\t    \tall_players: {},\n\t    \tshowStartButton: false, // true for local testing, false for global\n\t    \tuserID: ' ',\n\t    \tusername: ' ',\n\t    \tgameStatus: 0\n\t    };\n\t   \tthis.getPlayers = this.getPlayers.bind(this);\n\t   \tthis.getStartGame = this.getStartGame.bind(this);\n\t   \tthis.startGame = this.startGame.bind(this);\n\t   \tthis.leaveGame = this.leaveGame.bind(this);\n\t}\n\n\tgetPlayers(obj) {\n\t\tthis.setState({\n\t\t\tall_players: obj.plyrs,\n\t\t\tuserID: obj.uid,\n\t\t\tusername: obj.username\n\t\t});\n\t\tif(obj.uid === obj.host)\n\t\t\tthis.setState({showStartButton: true});\n\t}\n\n\tgetStartGame(obj) {\n\t\tthis.setState({gameStatus: 1}); \n\t\tthis.props.gameCallback(this.state);\n\t\tconsole.log(\"Bois, we're moving ahead\");\n\t}\n\n\tstartGame = () => {\n\t\tthis.props.socket.send(JSON.stringify({'type':'startGame'}));\n\t\tconsole.log(\"sent Start\")\n\t}\n\n\tleaveGame = () => {\n\t\tthis.props.socket.send(JSON.stringify({'type':'leaveGame'}));\n\t\t//remove this player from the game metadata; it could still go on\n\t}\n\n\trender() {\n\t\tif(!this.props.leavingGame) {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t\t  \t\t<h4 className='Play-status'>Waiting For Players...</h4>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t\t  \t\t<ListGroup>\n\t\t\t  \t\t\t\t{Object.entries(this.state.all_players).map(([id, value]) => {\n\t\t\t\t\t\t\t\treturn <ListGroup.Item className='List-item-design' key={id}>\n\t\t\t\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>})}\n\t\t\t\t\t\t</ListGroup>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row style={{width: '50vw'}}> \n\t\t\t\t  \t\t<Button size=\"lg\" block className='Confirm-button' disabled={!this.state.showStartButton} onClick={this.startGame}>Start Game</Button>\n\t\t\t\t  \t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t} \n\t\t{/*else{}: What to show for someone who has left the game??*/}\n\t}\n}\n\nexport default Landing;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport './Game.css';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faHeart} from '@fortawesome/free-solid-svg-icons';\n\n\nclass Results extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.getResults = this.getResults.bind(this);\n\t}\n\n\tgetResults() {\n\t\tconst points_display = this.props.points; //tokens won\n\t\tlet displayIcon = <FontAwesomeIcon icon={faHeart}/>;\n    \tlet spaceIcon = <span>&nbsp;&nbsp;</span>;\n\t\tObject.entries(points_display).map(([key,value]) => {\n\t\t\tlet icons = [];\n\t\t\tfor(let i=0;i<value;i++)\n\t\t\t\ticons = icons.concat(displayIcon).concat(spaceIcon);\n\t\t\tpoints_display[key] = icons;\n\t\t});\n\t\treturn points_display;\n\t}\n\n\t\n\trender() {\n\t\tconst points_display = this.getResults();\n\t\treturn(\n\t\t\t<Container className=\"Game-header\">\n\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t  \t\t<h3 className='Play-status'>{this.props.allPlayers[this.props.winner]}'s letter reached the Princess!</h3>\n\t\t\t  \t</Row>\n\t\t\t  \t{this.props.gameWinner!==null?\n\t\t\t  \t\t<Row style={{margin: 'auto'}}><h2 className='Play-status'>{this.props.allPlayers[this.props.gameWinner]} won the Princess' heart!</h2></Row>: <div></div>}\n\t\t\t  \t<Row style={{margin: 'auto'}}> \n\t\t\t  \t\t<ListGroup>\n\t\t\t  \t\t\t{Object.entries(points_display).map(([key,value]) => {\n\t\t\t\t\t\t\treturn (<ListGroup.Item key={key} className='List-item-design Container'>\n\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<Col style={{display: 'inline'}}>{this.props.allPlayers[key]}</Col>\n\t\t\t\t\t\t\t\t\t\t<Col style={{display: 'inline'}}>{value.map((item,i) => {return(<span style={{float: 'right'}}>{item}</span>);})}</Col>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t</ListGroup.Item>)})}\n\t\t\t\t\t</ListGroup>\n\t\t\t  \t</Row>\n\t\t\t  \t{this.props.gameWinner!==null? \n\t\t\t  \t\t<Row style={{width: '50vw'}}>\n\t\t\t  \t\t\t<Col><Button size=\"lg\" block className='Confirm-button' onClick={(e) => this.props.gameCallback(true)}>Start New Game</Button></Col>\n\t\t\t  \t\t\t<Col><Button size=\"lg\" block className='Confirm-button' onClick={(e) => this.props.gameCallback(false)}>Leave Game</Button></Col>\n\t\t\t  \t\t</Row> :\n\t\t\t  \t\t<Row style={{width: '50vw'}}>\n\t\t\t  \t\t\t<Button size=\"lg\" block className='Confirm-button' onClick={(e) => this.props.gameCallback(true)}>Start Next Round</Button>\n\t\t\t  \t\t</Row>}\n\t\t\t</Container> \n\t\t);\n\t}\n}\n\nexport default Results;\n","import { w3cwebsocket as W3CWebSocket } from \"websocket\"\n\nconst socket = new W3CWebSocket(((window.location.protocol === \"https:\") ? \"wss://\" : \"ws://\") + window.location.host + \"/ws\")\n\n\n\nexport default socket;","import React from 'react';\nimport './Game.css';\nimport Round from './Round.js';\nimport Landing from './Landing.js';\nimport Results from './Results.js';\nimport socket from './socket-context';\n\n\nclass Game extends React.Component {\n\t\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tgameStatus: 0, /* 0-landing screen start game, 1- in round, 2- round results, 3-landing screen end game*/\n\t\t\tleavingGame: false,\n\t\t\trounds_played: 0,\n\t\t\tall_players: {},\n\t\t\ttokens: {\n\t\t\t\t\t\t\"p1\" : 0,\n\t\t\t\t\t\t\"p2\" : 0,\n\t\t\t\t\t\t\"p3\" : 0\n\t\t\t\t\t},\n\t\t\troundWinner: \" \",\n\t\t\tgameWinner: \" \",\n\t\t\tuserID: ' ',\n\t\t\tusername: ' '\n\t\t};\n\t\tthis.landingCallback = this.landingCallback.bind(this);\n\t\tthis.roundCallback = this.roundCallback.bind(this);\n\t\tthis.resultsCallback = this.resultsCallback.bind(this);\n\n\t\tthis.landingRef = React.createRef();\n\t\tthis.roundRef = React.createRef();\n\t}\n\n\n\tcomponentDidMount() {\n\t   \tsocket.onopen = () => {\n\t\t\tconsole.log('WebSocket Client Connected');\n\t\t\tsocket.send(JSON.stringify({'type':'players'}));\n\t\t};\n\n\t\t// socket.on('disconnect', () => {\n\t\t//     console.log(this.state.username + ' disconnected');\n\t\t//     const index = this.state.all_players.indexOf(this.state.username);\n\t\t//     this.setState({all_players: all_players.splice(index, 1)});\n\t\t// });\n\n\t\tsocket.onmessage = (event) => {\n\t   \t\tvar obj = JSON.parse(event.data);\n\t\t\tconsole.log(obj);\n\t\t\tconsole.log(obj.type);\n\t\t\t\n\t\t\tif(obj.type === 'playersS')\n\t\t\t\tthis.landingRef.current.getPlayers(obj);\n\t\t\telse if(obj.type === 'startGame')\n\t\t\t\tthis.landingRef.current.getStartGame(obj);\n\t\t\telse if(obj.type === 'turn')\n\t\t\t\tthis.roundRef.current.getTurn(obj);\n\n\t\t\t//else if(obj.type === 'next') //This has been added just to test going to next turn and to play a round\n\t\t\t//\tsocket.send(JSON.stringify({'type':'ready'}));\n\n\t\t\telse if(obj.type === 'results')\n\t\t\t\tthis.roundRef.current.getResults(obj);\n\t\t}\n\t}\n\n\n\tlandingCallback = (landingData) => {\n\t\tthis.setState({\n\t\t\tgameStatus: landingData.gameStatus,\n\t\t\tall_players: landingData.all_players,\n\t\t\tuserID: landingData.userID,\n\t\t\tusername: landingData.username\n\t\t});\n\t\tconsole.log(\"landingData=\", landingData)\n\t}\n\n\troundCallback = (roundData) => {\n\t\tthis.setState({\n\t\t\trounds_played: this.state.rounds_played+1,\n\t\t\ttokens: roundData.tokens,\n\t\t\tgameStatus: 2,\n\t\t\troundWinner: roundData.roundWinner,\n\t\t\tgameWinner: roundData.gameWinner\n\t\t});\n\t}\n\n\tresultsCallback = (resultsData) => {\n\t\tif(this.state.gameWinner!==null && resultsData===true) {\n\t\t\tthis.setState({\n\t\t\t\tgameStatus: 0,\n\t\t\t\tleavingGame: false\n\t\t\t});\n\t\t\tconsole.log('set state=0');\n\t\t}\n\t\telse if(this.state.gameWinner===null && resultsData===true) {\n\t\t\tthis.setState({\n\t\t\t\tgameStatus: 1\n\t\t\t});\n\t\t\tconsole.log('set state=1');\n\t\t}\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\tgameStatus: 0,\n\t\t\t\tleavingGame: true\n\t\t\t});\n\t\t\tconsole.log('set state=0 and this player is leaving the game');\n\t\t}\n\t}\n\n\trender() {\n\t\tif (this.state.gameStatus===0)\n\t\t\treturn (<Landing ref={this.landingRef} leavingGame={this.state.leavingGame} \n\t\t\t\t\t\tgameCallback = {this.landingCallback} socket={socket}/>);\n\t\telse if (this.state.gameStatus===1)\n\t\t    return (<Round ref={this.roundRef} gameCallback={this.roundCallback} all_players={this.state.all_players}\n\t\t    \t\t\t\tuserID={this.state.userID} username={this.state.username} socket={socket}/>);\n\t\telse if (this.state.gameStatus===2)\n\t\t\treturn(<Results points={this.state.tokens} allPlayers={this.state.all_players} winner={this.state.roundWinner} \n\t\t\t\t\tgameWinner={this.state.gameWinner} gameCallback={this.resultsCallback}/>);\n\t}\n}\n\nexport default Game;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Game />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}