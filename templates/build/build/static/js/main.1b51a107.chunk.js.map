{"version":3,"sources":["Cards.js","../assets/values.js","CardCarousel.js","PlayCard.js","Round.js","socket-context.js","Landing.js","Results.js","Game.js","serviceWorker.js","index.js","../assets/cards sync /^/.//.*/.png$","../assets/cards/Assassin.png","../assets/cards/Baron.png","../assets/cards/Baroness.png","../assets/cards/Bishop.png","../assets/cards/Cardinal.png","../assets/cards/Constable.png","../assets/cards/Count.png","../assets/cards/Countess.png","../assets/cards/Dowager Queen.png","../assets/cards/Guard.png","../assets/cards/Handmaid.png","../assets/cards/Jester.png","../assets/cards/King.png","../assets/cards/Priest.png","../assets/cards/Prince.png","../assets/cards/Princess.png","../assets/cards/Sycophant.png"],"names":["Cards","props","clickCard","setState","opacity","console","log","state","bind","require","this","cardname","Card","hoverable","onClick","style","className","Body","padding","Img","src","getCard","React","Component","Values","CardCarousel","name","playedCardlist","played_cards","addCard","map","item","id","width","marginLeft","PlayCard","selectedPlayer","selectPlayer","endPlay","getList","valuesToSend","current_cards","currentPlayer","cardRemaining","results","roundCallback","cardPlayed","ListGroup","all_players","i","Item","action","key","e","Row","margin","Button","size","block","Round","discard","discardMode","cardToPlay","playCardCallback","playCardData","winner","gameCallback","playStatus","player_points","drawCard","selectCard","drawn","draw_pile","splice","chosen","remaining","currentCard","drawnCard","Container","Col","display","disabled","socket","io","transports","upgrade","Landing","startGame","startNewGame","endGame","gameOn","emit","on","data","in","toStartGame","final_winner","Results","sendResults","points_display","points","Object","entries","value","stars","Game","landingCallback","landingData","gameStatus","roundData","new_points","rounds_played","round_winner","resultsCallback","resultsData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.1b51a107.chunk.js","sourcesContent":["import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Game.css';\n\nclass Cards extends React.Component {\n\t\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \topacity: 1\n\t\t};\n\t    this.clickCard = this.clickCard.bind(this);\n\t}\n\n\tgetCard() {\n\t\treturn require('../assets/cards/'+this.props.cardname+'.png');\n\t}\n\n\tclickCard = () => {\n\t\tthis.setState({\n\t\t\topacity: 0.9\n\t\t});\n\t\tconsole.log(\"inner click\")\n\t}\n\n\trender() {\n\t\treturn(\n\t\t  \t<Card hoverable=\"true\" onClick={this.clickCard} style={{opacity: this.state.opacity}} className='Card-design'>\n\t\t      <Card.Body style={{ padding: 0 }}>\n\t\t        <Card.Img src={this.getCard()}/>\n\t\t      </Card.Body>\n\t\t    </Card>\n\t\t);\n\t}\n}\n\nexport default Cards;\n\n","export const Values = {\n\t\"num_players\" : 3,\n\t\"all_players\" : [\"p1\", \"p2\", \"p3\"],\n\t\"all_cards\" : [\"Jester\", \"Assassin\", \"Guard\", \"Priest\", \"Princess\", \"Baron\"],\n\t\"player_points\" : {\n\t\t\"p1\" : 0,\n\t\t\"p2\" : 0,\n\t\t\"p3\" : 0\n\t},\n\t\"played_cards\" : [\"Guard\", \"Priest\", \"Princess\"],\n\t\"current_cards\" : {\n\t\t\"p1\" : \"Priest\", \n\t\t\"p2\" : \"Jester\", \n\t\t\"p3\" : \"Baron\"\n\t},\n\t\"draw_pile\" : [\"Assassin\", \"Guard\", \"Priest\", \"Baron\"],\n\n};","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {Values} from '../assets/values.js';\nimport './Game.css';\n\nclass CardCarousel extends React.Component {\n\tgetCard(name) {\n\t\treturn require('../assets/cards/'+name+'.png');\n\t}\t\n\trender() {\n\t\tlet playedCardlist = Values.played_cards;\n\t\tif(this.props.addCard!= \" \") {\n\t\t\tplayedCardlist = [...playedCardlist, this.props.addCard];\n\t\t}\n\t\treturn(\n\t\t  \t<div className='Card-carousel'> \n\t\t\t  \t{playedCardlist.map((item) => \n\t\t\t  \t\t<div id={item}>\n\t\t\t  \t\t\t<Card style={{ width: '6rem', marginLeft: '2px' }}>\n\t\t\t\t\t      <Card.Body style={{ padding: 0 }}>\n\t\t\t\t\t        <Card.Img src={this.getCard(item)}/>\n\t\t\t\t\t      </Card.Body>\n\t\t\t\t\t    </Card>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t  \t</div>\n\t\t);\n\t}\n}\n\nexport default CardCarousel;\n\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Multiselect from 'react-bootstrap-multiselect';\nimport './Game.css';\nimport {Values} from '../assets/values.js';\nimport {Container, Row, Col} from 'react-bootstrap';\n\n\nclass PlayCard extends React.Component {\n\t\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tselectedPlayer: \" \"\n\t    }\n\t    this.selectPlayer = this.selectPlayer.bind(this);\n\t\tthis.endPlay = this.endPlay.bind(this);\n\t\tthis.getList = this.getList.bind(this);\n\t}\n\n\tselectPlayer(id){ \n\t\tthis.setState({\n\t\t\tselectedPlayer: id //turn that item disabled also\n\t\t});\n\t}\n\n\tendPlay() {\n\t\tconst valuesToSend = {};\n\t\tvaluesToSend[this.state.selectedPlayer] = Values.current_cards[this.state.selectedPlayer];\n\t\tvaluesToSend[this.props.currentPlayer] = this.props.cardRemaining;\n\t\tconsole.log(valuesToSend);\n\t\t//getResult(valuesToSend);\n\t\tconst results = {} //0 : no change (ex.Priest)\n\t\tresults[this.state.selectedPlayer] = 1;//won\n\t\tresults[this.props.currentPlayer] = -1;//lost and eliminated\n\t\t//display the result\n\t\tthis.props.roundCallback(results);\n\t}\n\n\tgetList() {\n\t\t//clean up list diaplay alignment also\n\t\t//Eliminated?? ICON!\n\t\t//Make sure you cant select yourself unless allowed\n\t\tvar list = null;\n\t\tif(this.props.cardPlayed in [\"Assassin\", \"Constable\", \"Count\", \"Countess\", \"Handmaid\", \"Princess\"]) {\n\t\t\tlist = {}; //no selection reqd\n\t\t}\n\t\telse if(this.props.cardPlayed==\"Baroness\") {\n\t\t\tlist = (<ListGroup>\n\t  \t\t\t{Values.all_players.map((item, i) => {\n\t\t\t\t\t\treturn <ListGroup.Item action className='List-item-design' key={item} onClick={(e) => this.selectPlayer(item, e)}>{item}</ListGroup.Item>})}\n\t\t\t</ListGroup>); //1 or 2 selection\n\t\t}\n\t\telse if(this.props.cardPlayed==\"Cardinal\") {\n\t\t\tlist = (<ListGroup>\n\t  \t\t\t{Values.all_players.map((item, i) => {\n\t\t\t\t\t\treturn <ListGroup.Item action className='List-item-design' key={item} onClick={(e) => this.selectPlayer(item, e)}>{item}</ListGroup.Item>})}\n\t\t\t</ListGroup>); //2 selection\n\t\t}\n\t\telse {\n\t\t\tlist = (<ListGroup>\n\t  \t\t\t{Values.all_players.map((item, i) => {\n\t\t\t\t\t\treturn <ListGroup.Item action className='List-item-design' key={item} onClick={(e) => this.selectPlayer(item, e)}>{item}</ListGroup.Item>})}\n\t\t\t</ListGroup>); //1 selection\n\t  \t}\n\t\treturn list;\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Row style={{margin: 'auto'}}>\n\t\t\t\t\t{this.getList()}\n\t\t\t\t</Row>\n\t\t\t\t<Row style={{width: '50vw'}}> \n\t\t\t\t\t<Button size=\"lg\" block className='Confirm-button' onClick={this.endPlay}>OK</Button>\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PlayCard;\n\n\n\n/*<ListGroup>\n\t\t{Values.all_players.map((item, i) => {\n\t\t\treturn <ListGroup.Item action className='List-item-design' key={item} onClick={(e) => this.selectPlayer(item, e)}>{item}</ListGroup.Item>})}\n</ListGroup>*/","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport './Game.css';\nimport Cards from './Cards.js';\nimport CardCarousel from './CardCarousel.js';\nimport PlayCard from './PlayCard.js';\nimport {Values} from '../assets/values.js';\nimport {Container, Row, Col} from 'react-bootstrap';\n\n\nclass Round extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \topacity: 1,\n\t\t    cardToPlay: \" \",\n\t\t    cardRemaining: \" \",\n\t\t    discardMode: false,\n\t\t    currentPlayer: \"p1\",\n\t\t    playStatus: \"p1\"+\" is discarding\",\n\t\t    results: Values.player_points,\n\t\t    winner: \"p1\"\n\t\t};\n\t    this.drawCard = this.drawCard.bind(this);\n\t    this.selectCard = this.selectCard.bind(this);\n\t    this.discard = this.discard.bind(this);\n\t    this.endPlay = this.endPlay.bind(this);\n\t    this.playCardCallback = this.playCardCallback.bind(this);\n\t}\n\n\tdrawCard() {\n\t\tconst drawn = Values.draw_pile[0];\n\t\t//drawCard();\n\t\tconsole.log(Values.draw_pile.splice(0, 0)); //check syntax\n\t\treturn drawn;\n\t}\n\n\tselectCard(chosen, remaining) {\n\t\tthis.setState({\n\t\t\tcardToPlay: chosen,\n\t\t\tcardRemaining: remaining,\n\t\t\topacity: 0.9\n\t\t});\n    \tconsole.log('Clicked ' + this.state.cardToPlay);\n  \t}\n\n  \tdiscard = () => {\n  \t\tthis.setState({\n\t\t\tdiscardMode: true\n\t\t});\n  \t\tconsole.log('Discarding ' + this.state.cardToPlay);\n  \t}\n\n  \tendPlay = () => {\n  \t\tthis.setState({\n\t\t\tdiscardMode: false\n\t\t});\n  \t\tconsole.log('Ending Play');\n  \t}\n\n  \tplayCardCallback = (playCardData) => {\n  \t\tthis.setState({\n  \t\t\tresults: playCardData, //check if round is over based on backend logic\n  \t\t\twinner: \"p1\", //check who won; if no one yet, keep blank\n  \t\t});\n  \t\tif(this.state.winner!=\" \") {\n\t\t\tthis.props.gameCallback(this.state.winner);\n\t\t}\n\t\telse {\n\t\t\tthis.endPlay();\n\t\t}\n  \t}\n\n\trender() {\n\t\tconst currentCard = Values.current_cards[this.state.currentPlayer];\n\t\tconst drawnCard = this.drawCard();\n\t\tconsole.log('in round');\n\t\tif(this.state.discardMode) {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<CardCarousel addCard={this.state.cardToPlay}/>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<h4 className='Play-status'>{this.state.playStatus}</h4>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t\t<PlayCard currentPlayer = {this.state.currentPlayer} cardPlayed={this.state.cardToPlay} cardRemaining={this.state.cardRemaining} roundCallback={this.playCardCallback}/>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t} \n\t\telse {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<CardCarousel addCard={\" \"}/>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<h4 className='Play-status'>{this.state.playStatus}</h4>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row>\n\t\t\t\t  \t\t<Col style={{display: \"inline-flex\"}} onClick={(e) => this.selectCard(currentCard, drawnCard, e)}>\n\t\t\t\t  \t\t\t<Cards cardname={currentCard}/>\n\t\t\t\t  \t\t</Col>\n\t\t\t\t  \t\t<Col style={{display: \"inline-flex\"}} onClick={(e) => this.selectCard(drawnCard, currentCard, e)}>\n\t\t\t\t  \t\t\t<Cards cardname={drawnCard}/>\n\t\t\t\t  \t\t</Col>\n\t\t\t\t  \t</Row> \n\t\t\t\t  \t<Row style={{width: '50vw'}}> \n\t\t\t\t  \t\t<Button size=\"lg\" block className='Confirm-button' disabled={this.state.cardToPlay==\" \"} onClick={this.discard}>Discard</Button>\n\t\t\t\t  \t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default Round;\n","import * as io from 'socket.io-client'\n\nconst socket = io({transports: ['websocket'], upgrade: false})\n\nexport default socket;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport './Game.css';\n//import {Values} from '../assets/values.js';\nimport {Container, Row, Col} from 'react-bootstrap';\n\nimport socket from './socket-context'\n\n\nclass Landing extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tgameOn: true\n\t    };\n\t   \tthis.startGame = this.startGame.bind(this);\n\t   \tthis.startNewGame = this.startNewGame.bind(this);\n\t   \tthis.endGame = this.endGame.bind(this);\n\t   \tthis.all_players = []\n\t   \tsocket.emit('join')//request all players\n\t   \tsocket.on('message', function(data){\n\t   \t\tthis.all_players = data.in\n\t   \t\tconsole.log(data.in)\n\t   \t})\n\t}\n\n\tstartGame = () => {\n\t\tthis.props.gameCallback(1);\n\t}\n\n\tstartNewGame = () => {\n\t\tthis.props.gameCallback(0);\n\t}\n\n\tendGame = () => {\n\t\tthis.setState({\n\t\t\tgameOn: false //remove this player from the game metadata; it could still go on\n\t\t});\n\t}\n\n\n\trender() {\n\t\tif(this.props.toStartGame) {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t\t  \t\t<h4 className='Play-status'>Waiting For Players...</h4>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t\t  \t\t<ListGroup>\n\t\t\t\t  \t\t\t{this.all_players.map((item, i) => {\n\t\t  \t\t\t\t\t\treturn <ListGroup.Item className='List-item-design'>{item}</ListGroup.Item>})}\n\t\t\t\t\t\t</ListGroup>\n\t\t\t\t  \t</Row>\n\t\t\t\t  \t<Row style={{width: '50vw'}}> \n\t\t\t\t  \t\t<Button size=\"lg\" block className='Confirm-button' onClick={this.startGame}>Start Game</Button>\n\t\t\t\t  \t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t} \n\t\telse {\n\t\t\treturn(\n\t\t\t\t<Container className=\"Game-header\">\n\t\t\t\t<Row style={{margin: 'auto'}}>\n\t\t\t\t  \t<h4 className='Play-status'>{this.props.final_winner} won the game!</h4>\n\t\t\t  \t</Row>\n\t\t\t  \t<Row style={{margin: 'auto'}}> \n\t\t\t  \t\t<Col><Button size=\"lg\" style={{width: '30vw'}} block className='Confirm-button' onClick={this.endGame}>Leave Game</Button></Col>\n\t\t\t  \t\t<Col><Button size=\"lg\" style={{width: '30vw'}} block className='Confirm-button' onClick={this.startNewGame}>Start New Game</Button></Col>\n\t\t\t  \t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default Landing;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport FA from 'react-fontawesome';\nimport './Game.css';\nimport {Container, Row, Col} from 'react-bootstrap';\n\n\nclass Results extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.sendResults = this.sendResults.bind(this);\n\t}\n\n\tsendResults(final_winner) {\n\t\tconsole.log('Sent winner='+final_winner);\n\t\tthis.props.gameCallback(final_winner);\n\t}\n\n\trender() {\n\t\tconst points_display = this.props.points; //games won\n\t\tlet final_winner = \"p1\";\n\t\tObject.entries(points_display).map(([key,value]) => {\n\t\t\tif (value>=4) {\n\t\t\t\tfinal_winner = key;\n\t\t\t}\n\t\t\tlet stars = \"\";\n\t\t\tfor(let i=0;i<value;i++)\n\t\t\t\tstars+=\"*\";\n\t\t\tpoints_display[key] = stars; // Fontawesome hearts/envelopes\n\t\t})\n\t\treturn(\n\t\t\t<Container className=\"Game-header\">\n\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t  \t\t<h4 className='Play-status'>{this.props.winner}'s letter reached the Princess!</h4>\n\t\t\t  \t</Row>\n\t\t\t  \t<Row style={{margin: 'auto'}}>\n\t\t\t  \t\t<ListGroup>\n\t\t\t  \t\t\t{Object.entries(points_display).map(([key,value]) => {\n\t\t\t\t\t\t\treturn <ListGroup.Item className='List-item-design'>\n\t\t\t\t\t\t\t\t\t\t<Col style={{display: 'inline'}}>{key}</Col>\n\t\t\t\t\t\t\t\t\t\t<Col style={{display: 'inline'}}>{value}</Col>\n\t\t\t\t\t\t\t\t\t</ListGroup.Item>})}\n\t\t\t\t\t</ListGroup>\n\t\t\t  \t</Row>\n\t\t\t  \t<Row style={{width: '50vw'}}> \n\t\t\t  \t\t{final_winner!=\" \"? <Button size=\"lg\" block className='Confirm-button' onClick={(e) => this.sendResults(final_winner, e)}>OK</Button>\n\t\t\t  \t\t\t:<Button size=\"lg\" block className='Confirm-button' onClick={(e) => this.sendResults(final_winner, e)}>Start Next Round</Button>}\n\t\t\t  \t</Row>\n\t\t\t</Container> \n\t\t);\n\t}\n}\n\nexport default Results;\n","import React from 'react';\nimport './Game.css';\nimport Round from './Round.js';\nimport Landing from './Landing.js';\nimport Results from './Results.js';\nimport {Values} from '../assets/values.js';\n\n\nimport socket from './socket-context'\n\n\nclass Game extends React.Component {\n\t\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t    \tgameStatus: 0, /* 0-landing screen start game, 1- in round, 2- round results, 3-landing screen end game*/\n\t\t\ttoStartGame: true,\n\t\t\trounds_played: 0,\n\t\t\tpoints: Values.player_points,\n\t\t\tround_winner: \" \"\n\t\t};\n\t\tthis.landingCallback = this.landingCallback.bind(this);\n\t\tthis.roundCallback = this.roundCallback.bind(this);\n\t\tthis.resultsCallback = this.resultsCallback.bind(this);\n\t}\n\n\tlandingCallback = (landingData) => {\n\t\tthis.setState({\n\t\t\tgameStatus: landingData\n\t\t})\n\t}\n\n\troundCallback = (roundData) => {\n\t\tconst winner = roundData;\n\t\tlet new_points = this.state.points;\n\t\tnew_points[winner] = new_points[winner]+1;\n\t\tthis.setState({\n\t\t\trounds_played: this.state.rounds_played+1,\n\t\t\tpoints: new_points,\n\t\t\tgameStatus: 2,\n\t\t\tround_winner: winner\n\t\t});\n\t}\n\n\tresultsCallback = (resultsData) => {\n\t\tif(resultsData!=\" \") {\n\t\t\tthis.setState({\n\t\t\t\tgameStatus: 3,\n\t\t\t\tround_winner: resultsData\n\t\t\t});\n\t\t\tconsole.log('results='+resultsData);\n\t\t\tconsole.log('set state=3');\n\t\t}\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\tgameStatus: 1\n\t\t\t});\n\t\t\tconsole.log('set state=1');\n\t\t}\n\t}\n\n\trender() {\n\t\tif (this.state.gameStatus==0)\n\t\t\treturn (<Landing toStartGame={this.state.toStartGame} gameCallback = {this.landingCallback}/>);\n\t\telse if (this.state.gameStatus==1)\n\t\t    return (<Round gameCallback={this.roundCallback}/>);\n\t\telse if (this.state.gameStatus==2)\n\t\t\treturn(<Results points={this.state.points} winner={this.state.round_winner} gameCallback={this.resultsCallback}/>);\n\t\telse\n\t\t\treturn (<Landing toStartGame={false} final_winner={this.state.round_winner} gameCallback = {this.landingCallback}/>);\n\t}\n}\n\nexport default Game;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Game />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./Assassin.png\": 67,\n\t\"./Baron.png\": 68,\n\t\"./Baroness.png\": 69,\n\t\"./Bishop.png\": 70,\n\t\"./Cardinal.png\": 71,\n\t\"./Constable.png\": 72,\n\t\"./Count.png\": 73,\n\t\"./Countess.png\": 74,\n\t\"./Dowager Queen.png\": 75,\n\t\"./Guard.png\": 76,\n\t\"./Handmaid.png\": 77,\n\t\"./Jester.png\": 78,\n\t\"./King.png\": 79,\n\t\"./Priest.png\": 80,\n\t\"./Prince.png\": 81,\n\t\"./Princess.png\": 82,\n\t\"./Sycophant.png\": 83\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 34;","module.exports = __webpack_public_path__ + \"static/media/Assassin.6c7b8198.png\";","module.exports = __webpack_public_path__ + \"static/media/Baron.ac315008.png\";","module.exports = __webpack_public_path__ + \"static/media/Baroness.1c5a87ee.png\";","module.exports = __webpack_public_path__ + \"static/media/Bishop.0b0e0959.png\";","module.exports = __webpack_public_path__ + \"static/media/Cardinal.c7b46de0.png\";","module.exports = __webpack_public_path__ + \"static/media/Constable.f6ac8dd7.png\";","module.exports = __webpack_public_path__ + \"static/media/Count.67f8d8d4.png\";","module.exports = __webpack_public_path__ + \"static/media/Countess.6e495d6c.png\";","module.exports = __webpack_public_path__ + \"static/media/Dowager Queen.51a0834e.png\";","module.exports = __webpack_public_path__ + \"static/media/Guard.13b4141c.png\";","module.exports = __webpack_public_path__ + \"static/media/Handmaid.4af99d42.png\";","module.exports = __webpack_public_path__ + \"static/media/Jester.845851da.png\";","module.exports = __webpack_public_path__ + \"static/media/King.52d72f4c.png\";","module.exports = __webpack_public_path__ + \"static/media/Priest.2ef7dd82.png\";","module.exports = __webpack_public_path__ + \"static/media/Prince.fece33d0.png\";","module.exports = __webpack_public_path__ + \"static/media/Princess.2f3b56ce.png\";","module.exports = __webpack_public_path__ + \"static/media/Sycophant.09602aa7.png\";"],"sourceRoot":""}